{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
		"FunctionName": {
			"defaultValue": "CFSAuditLogs",
			"type": "string",
			"metadata": {
				"description": "Specifies the name of the Function App."
			}
		},
        "clientID": {
            "type": "string",            
			"metadata": {
				"description": "AAD Application Client ID"
			}
        },
        "clientSecret": {
            "type": "securestring",
			"metadata": {
				"description": "AAD Application Client Secret"
			}            
        },
        "domain": {
            "type": "string",
			"metadata": {
				"description": "<domain>.onmicrosoft.com"
			}            
        },
        "publisher": {
            "type": "string",
            "metadata": {
				"description": "GUID"
			}
        },          
        "workspaceID": {
            "type": "string",
            "metadata": {
				"description": "Specifies the Log Analytics Workspace Id."
			}
        },
        "workspaceKey": {
            "type": "securestring",      
			"metadata": {
				"description": "Specifies the Log Analytics Workspace Key."
			}
        }		
    },
    "variables": {            
			"FunctionName": "[concat(toLower(parameters('FunctionName')), uniqueString(resourceGroup().id))]",            
			"StorageAccountName":"[concat(substring(variables('FunctionName'), 0, 20), 'sa')]",    
			"KeyVaultName": "[concat(substring(variables('FunctionName'), 0, 20), 'kv')]",
			"AzureAADClientSecret": "AzureAADClientSecret",    
			"LogAnalyticsWorkspaceKey": "LogAnalyticsWorkspaceKey",
			"StorageSuffix":"[environment().suffixes.storage]",
			"HostingPlanName":"[concat('ASP-', variables('FunctionName'))]",																	   
			"LogAnaltyicsUri":"[replace(environment().portal, 'https://portal', concat('https://', toLower(parameters('workspaceId')), '.ods.opinsights'))]",
			"OfficeLoginUri":"[replace(environment().portal, 'https://portal.azure', 'https://manage.office')]",
			"AzureAADLoginUri":"[replace(environment().portal, 'https://portal.azure', 'https://login.microsoftonline')]"
    },
    "resources": [
        {
            "type": "Microsoft.Insights/components",
            "apiVersion": "2015-05-01",
            "name": "[variables('FunctionName')]",
            "location": "[resourceGroup().location]",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "ApplicationId": "[variables('FunctionName')]"
            }
        },
        {
		  "type": "Microsoft.KeyVault/vaults",
		  "apiVersion": "2016-10-01",
		  "name": "[variables('KeyVaultName')]",
		  "location": "[resourceGroup().location]",
		  "dependsOn": [
			"[resourceId('Microsoft.Web/sites', variables('FunctionName'))]"
		  ],
		  "properties": {
			"sku": {
			  "family": "A",
			  "name": "Standard"
			},
			"tenantId": "[subscription().tenantId]",
			"accessPolicies": [
			  {
				"tenantId": "[subscription().tenantId]",
				"objectId": "[reference(resourceId('Microsoft.Web/sites', variables('FunctionName')),'2019-08-01', 'full').identity.principalId]",
				"permissions": {
				  "secrets": [ "get",
							   "list"
				  ]
				}
			  }
			],
			"enabledForDeployment": false,
			"enabledForDiskEncryption": false,
			"enabledForTemplateDeployment": true,
			"enableSoftDelete": true
		  },
		  "resources": [
			{
			  "type": "secrets",
			  "apiVersion": "2016-10-01",
			  "name": "[variables('AzureAADClientSecret')]",
			  "dependsOn": [
				"[resourceId('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]"
			  ],
			  "properties": {
				"value": "[parameters('clientSecret')]",
				"contentType": "string",
				"attributes": {
				  "enabled": true
				}
			  }
			},        
			{
			  "type": "secrets",
			  "apiVersion": "2016-10-01",
			  "name": "[variables('LogAnalyticsWorkspaceKey')]",
			  "dependsOn": [
				"[resourceId('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]"
			  ],
			  "properties": {
				"value": "[parameters('workspaceKey')]",
				"contentType": "string",
				"attributes": {
				  "enabled": true
				}
			  }
			}
		  ]
		},
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[variables('StorageAccountName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "publicNetworkAccess": "Disabled"
            }
        },
        {
            "apiVersion": "2018-02-01",
            "name": "[variables('HostingPlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "location": "[resourceGroup().location]",
            "kind": "elastic",
            "tags": {},
            "dependsOn": [],
            "properties": {
                "targetWorkerCount": "2",
                "targetWorkerSizeId": "3",                
                "reserved": true,
                "maximumElasticWorkerCount": "20"
            },
            "sku": {
                "tier": "ElasticPremium",
                "name": "EP1"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('StorageAccountName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": [
                    ]
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('StorageAccountName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": [
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[variables('FunctionName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]",
                "[resourceId('Microsoft.Web/serverfarms', variables('HostingPlanName'))]",                
                "[resourceId('Microsoft.Insights/components', variables('FunctionName'))]"
            ],
            "kind": "functionapp",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "name": "[variables('FunctionName')]",                
                "httpsOnly": true,
                "clientAffinityEnabled": true,
				"alwaysOn": true,
				"reserved": true,
				"serverFarmId": "[concat('/subscriptions/', subscription().subscriptionId,'/resourcegroups/', resourceGroup().name, '/providers/Microsoft.Web/serverfarms/', variables('HostingPlanName'))]",				 
				"siteConfig": {
					"powerShellVersion": "~7"
				}		 
            },
            "resources": [
                {
                    "apiVersion": "2018-11-01",
                    "type": "config",
                    "name": "appsettings",
                    "dependsOn": [
                        "[concat('Microsoft.Web/sites/', variables('FunctionName'))]",
						"[resourceId('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]",
						"[resourceId('Microsoft.KeyVault/vaults/secrets', variables('KeyVaultName'), variables('AzureAADClientSecret'))]",            
						"[resourceId('Microsoft.KeyVault/vaults/secrets', variables('KeyVaultName'), variables('LogAnalyticsWorkspaceKey'))]"
                    ],
                    "properties": {
                        "FUNCTIONS_EXTENSION_VERSION": "~4",
                        "FUNCTIONS_WORKER_RUNTIME": "powershell",
                        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.insights/components', variables('FunctionName')), '2015-05-01').InstrumentationKey]",
                        "APPLICATIONINSIGHTS_CONNECTION_STRING": "[reference(resourceId('microsoft.insights/components', variables('FunctionName')), '2015-05-01').ConnectionString]",
                        "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=', toLower(variables('StorageAccountName')),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName')), '2019-06-01').keys[0].value, ';EndpointSuffix=',toLower(variables('StorageSuffix')))]",						
                        "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[concat('DefaultEndpointsProtocol=https;AccountName=', toLower(variables('StorageAccountName')),';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName')), '2019-06-01').keys[0].value, ';EndpointSuffix=',toLower(variables('StorageSuffix')))]",
                        "WEBSITE_CONTENTSHARE": "[variables('FunctionName')]",
                        "clientID": "[parameters('clientSecret')]",
                        "clientSecret": "[concat('@Microsoft.KeyVault(SecretUri=', reference(variables('AzureAADClientSecret')).secretUriWithVersion, ')')]",
                        "domain": "[parameters('domain')]",
                        "tenantGuid": "[subscription().tenantId]",
                        "publisher": "[parameters('publisher')]",                        
                        "workspaceID": "[parameters('workspaceID')]",
                        "workspaceKey": "[concat('@Microsoft.KeyVault(SecretUri=', reference(variables('LogAnalyticsWorkspaceKey')).secretUriWithVersion, ')')]",
                        "WEBSITE_RUN_FROM_PACKAGE": "https://aka.ms/IngestSecurityCopilotAuditLogs",                        
						"LAUri":"[variables('LogAnaltyicsUri')]",
						"AzureAADLoginUri":"[variables('AzureAADLoginUri')]",
						"OfficeLoginUri":"[variables('OfficeLoginUri')]",
						"Schedule":"0 */10 * * * *"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('StorageAccountName'), '/default/azure-webjobs-hosts')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('StorageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('StorageAccountName'), '/default/azure-webjobs-secrets')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('StorageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('StorageAccountName'), '/default/', tolower(variables('FunctionName')))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', variables('StorageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]"
            ],
            "properties": {
                "shareQuota": 5120
            }
        }       
    ]
}