{
    "content": null,
    "value": [
        {
            "skillset": null,
            "name": "List Child Processes for Process File",
            "format": null,
            "displayName": "List Child Processes for Process File",
            "altName": null,
            "dependencies": [],
            "description": "",
            "descriptionForModel": "",
            "examplePrompts": [
                "Using Tanium, list the child processes of process-name so that I can analyze resource usage. Display the results in a table, alphabetically sorted by process name, and return a Tanium Console Question Results URL so that I can view the real-time list of endpoints. Thank you."
            ],
            "hidden": false,
            "inputs": [
                {
                    "required": true,
                    "defaultValue": null,
                    "placeholderValue": null,
                    "enum": null,
                    "name": "filename",
                    "type": {
                        "name": "String"
                    },
                    "description": "The process file name."
                },
                {
                    "required": false,
                    "defaultValue": null,
                    "placeholderValue": null,
                    "enum": null,
                    "name": "endpointName",
                    "type": {
                        "name": "String"
                    },
                    "description": "The name of an endpoint that, if provided, filters the results to child processes for only this endpoint. If this is not defined, this returns child processes from all endpoints that have the process file."
                }
            ],
            "outputs": [],
            "promptAlignedName": null,
            "previewState": "GA",
            "previewStartTime": null,
            "userVisibilityFeatureFlags": [],
            "userVisibility": "Always",
            "plannerVisibilityFeatureFlags": [],
            "plannerVisibility": "Always",
            "settings": {
                "QueryInputs": null,
                "QueryInputs:endpointName": null,
                "QueryInputs:endpointName:Type": null,
                "QueryInputs:endpointName:Type:Name": "String",
                "QueryInputs:endpointName:Required": "False",
                "QueryInputs:endpointName:Name": "endpointName",
                "QueryInputs:endpointName:Description": "The name of an endpoint that, if provided, filters the results to child processes for only this endpoint. If this is not defined, this returns child processes from all endpoints that have the process file.",
                "PathInputs": null,
                "PathInputs:filename": null,
                "PathInputs:filename:Type": null,
                "PathInputs:filename:Type:Name": "String",
                "PathInputs:filename:Required": "True",
                "PathInputs:filename:Name": "filename",
                "PathInputs:filename:Description": "The process file name.",
                "OperationType": "Get",
                "OperationPath": "/v1/process-files/{filename}/child-processes",
                "HeaderInputs": null,
                "HasJsonBody": "False",
                "HasFormUrlEncodedBody": "False",
                "EndpointUrlSettingName": "TaniumInstanceUrl",
                "EndpointUrl": "",
                "DefaultQueryStringValues": null,
                "DefaultHeaderValues": null,
                "BodyInputs": null
            },
            "skillSummaryMetadata": null,
            "enableVariableSubstitutionInCompose": false,
            "finalResponseSettings": null
        },
        {
            "skillset": null,
            "name": "Count Endpoints Having Package Version",
            "format": null,
            "displayName": "Count Endpoints Having Package Version",
            "altName": null,
            "dependencies": [],
            "description": "",
            "descriptionForModel": "",
            "examplePrompts": [
                "Using Tanium, return the total number of endpoints with a software package for software-name, so that I can start cataloging which computers have the software installed. Display the results in a table, alphabetically sorted by host name, and return a Tanium Console Question Results URL so that I can view the real-time list of endpoints. Thank you."
            ],
            "hidden": false,
            "inputs": [
                {
                    "required": true,
                    "defaultValue": null,
                    "placeholderValue": null,
                    "enum": null,
                    "name": "packageName",
                    "type": {
                        "name": "String"
                    },
                    "description": "Required. The software package name."
                },
                {
                    "required": true,
                    "defaultValue": null,
                    "placeholderValue": null,
                    "enum": null,
                    "name": "packageVersion",
                    "type": {
                        "name": "String"
                    },
                    "description": "Required. The version of the software package."
                }
            ],
            "outputs": [],
            "promptAlignedName": null,
            "previewState": "GA",
            "previewStartTime": null,
            "userVisibilityFeatureFlags": [],
            "userVisibility": "Always",
            "plannerVisibilityFeatureFlags": [],
            "plannerVisibility": "Always",
            "settings": {
                "QueryInputs": null,
                "PathInputs": null,
                "PathInputs:packageVersion": null,
                "PathInputs:packageVersion:Type": null,
                "PathInputs:packageVersion:Type:Name": "String",
                "PathInputs:packageVersion:Required": "True",
                "PathInputs:packageVersion:Name": "packageVersion",
                "PathInputs:packageVersion:Description": "Required. The version of the software package.",
                "PathInputs:packageName": null,
                "PathInputs:packageName:Type": null,
                "PathInputs:packageName:Type:Name": "String",
                "PathInputs:packageName:Required": "True",
                "PathInputs:packageName:Name": "packageName",
                "PathInputs:packageName:Description": "Required. The software package name.",
                "OperationType": "Get",
                "OperationPath": "/v1/packages/{packageName}/versions/{packageVersion}/endpoints",
                "HeaderInputs": null,
                "HasJsonBody": "False",
                "HasFormUrlEncodedBody": "False",
                "EndpointUrlSettingName": "TaniumInstanceUrl",
                "EndpointUrl": "",
                "DefaultQueryStringValues": null,
                "DefaultHeaderValues": null,
                "BodyInputs": null
            },
            "skillSummaryMetadata": null,
            "enableVariableSubstitutionInCompose": false,
            "finalResponseSettings": null
        },
        {
            "skillset": null,
            "name": "Get Vulnerability Test Results",
            "format": null,
            "displayName": "Get Vulnerability Test Results",
            "altName": null,
            "dependencies": [],
            "description": "",
            "descriptionForModel": "",
            "examplePrompts": [
                "Using Tanium, examine whether endpoint hostname is vulnerable to cve-id, and return the reasons that this endpoint is vulnerable, along with a suggested plan of action to remediate the intrusion. Thank you."
            ],
            "hidden": false,
            "inputs": [
                {
                    "required": true,
                    "defaultValue": null,
                    "placeholderValue": null,
                    "enum": null,
                    "name": "cveId",
                    "type": {
                        "name": "String"
                    },
                    "description": "Required. The CVE ID."
                },
                {
                    "required": true,
                    "defaultValue": null,
                    "placeholderValue": null,
                    "enum": null,
                    "name": "computerName",
                    "type": {
                        "name": "String"
                    },
                    "description": "Required. The endpoint name."
                }
            ],
            "outputs": [],
            "promptAlignedName": null,
            "previewState": "GA",
            "previewStartTime": null,
            "userVisibilityFeatureFlags": [],
            "userVisibility": "Always",
            "plannerVisibilityFeatureFlags": [],
            "plannerVisibility": "Always",
            "settings": {
                "QueryInputs": null,
                "QueryInputs:computerName": null,
                "QueryInputs:computerName:Type": null,
                "QueryInputs:computerName:Type:Name": "String",
                "QueryInputs:computerName:Required": "True",
                "QueryInputs:computerName:Name": "computerName",
                "QueryInputs:computerName:Description": "Required. The endpoint name.",
                "PathInputs": null,
                "PathInputs:cveId": null,
                "PathInputs:cveId:Type": null,
                "PathInputs:cveId:Type:Name": "String",
                "PathInputs:cveId:Required": "True",
                "PathInputs:cveId:Name": "cveId",
                "PathInputs:cveId:Description": "Required. The CVE ID.",
                "OperationType": "Get",
                "OperationPath": "/v1/cves/{cveId}/test-results",
                "HeaderInputs": null,
                "HasJsonBody": "False",
                "HasFormUrlEncodedBody": "False",
                "EndpointUrlSettingName": "TaniumInstanceUrl",
                "EndpointUrl": "",
                "DefaultQueryStringValues": null,
                "DefaultHeaderValues": null,
                "BodyInputs": null
            },
            "skillSummaryMetadata": null,
            "enableVariableSubstitutionInCompose": false,
            "finalResponseSettings": null
        },
        {
            "skillset": null,
            "name": "List Endpoints Having Package",
            "format": null,
            "displayName": "List Endpoints Having Package",
            "altName": null,
            "dependencies": [],
            "description": "",
            "descriptionForModel": "",
            "examplePrompts": [
                "Using Tanium, return the endpoints with a software package for software-name so that I can start cataloguing which computers might have an out-of-date version. Display the results in a table, alphabetically sorted by host name, and return a Tanium Console Question Results URL so that I can view the real-time list of endpoints. Thank you."
            ],
            "hidden": false,
            "inputs": [
                {
                    "required": true,
                    "defaultValue": null,
                    "placeholderValue": null,
                    "enum": null,
                    "name": "packageName",
                    "type": {
                        "name": "String"
                    },
                    "description": "Required. The software package name."
                }
            ],
            "outputs": [],
            "promptAlignedName": null,
            "previewState": "GA",
            "previewStartTime": null,
            "userVisibilityFeatureFlags": [],
            "userVisibility": "Always",
            "plannerVisibilityFeatureFlags": [],
            "plannerVisibility": "Always",
            "settings": {
                "QueryInputs": null,
                "PathInputs": null,
                "PathInputs:packageName": null,
                "PathInputs:packageName:Type": null,
                "PathInputs:packageName:Type:Name": "String",
                "PathInputs:packageName:Required": "True",
                "PathInputs:packageName:Name": "packageName",
                "PathInputs:packageName:Description": "Required. The software package name.",
                "OperationType": "Get",
                "OperationPath": "/v1/packages/{packageName}/endpoints",
                "HeaderInputs": null,
                "HasJsonBody": "False",
                "HasFormUrlEncodedBody": "False",
                "EndpointUrlSettingName": "TaniumInstanceUrl",
                "EndpointUrl": "",
                "DefaultQueryStringValues": null,
                "DefaultHeaderValues": null,
                "BodyInputs": null
            },
            "skillSummaryMetadata": null,
            "enableVariableSubstitutionInCompose": false,
            "finalResponseSettings": null
        },
        {
            "skillset": null,
            "name": "List Endpoints with Process Command",
            "format": null,
            "displayName": "List Endpoints with Process Command",
            "altName": null,
            "dependencies": [],
            "description": "",
            "descriptionForModel": "",
            "examplePrompts": [
                "Show me processes that have run in the past with the specified command."
            ],
            "hidden": false,
            "inputs": [
                {
                    "required": true,
                    "defaultValue": null,
                    "placeholderValue": null,
                    "enum": null,
                    "name": "commandLine",
                    "type": {
                        "name": "String"
                    },
                    "description": "The process command."
                },
                {
                    "required": false,
                    "defaultValue": null,
                    "placeholderValue": null,
                    "enum": null,
                    "name": "timeRange",
                    "type": {
                        "name": "String"
                    },
                    "description": "The time range. Available values are \"30 minutes\", \"1 hour\", \"3 hours\", \"12 hours\", \"1 day\", \"3 days\", \"1 week\", \"1 month\". The default is \"1 hour\"."
                }
            ],
            "outputs": [],
            "promptAlignedName": null,
            "previewState": "GA",
            "previewStartTime": null,
            "userVisibilityFeatureFlags": [],
            "userVisibility": "Always",
            "plannerVisibilityFeatureFlags": [],
            "plannerVisibility": "Always",
            "settings": {
                "QueryInputs": null,
                "QueryInputs:timeRange": null,
                "QueryInputs:timeRange:Type": null,
                "QueryInputs:timeRange:Type:Name": "String",
                "QueryInputs:timeRange:Required": "False",
                "QueryInputs:timeRange:Name": "timeRange",
                "QueryInputs:timeRange:Description": "The time range. Available values are \"30 minutes\", \"1 hour\", \"3 hours\", \"12 hours\", \"1 day\", \"3 days\", \"1 week\", \"1 month\". The default is \"1 hour\".",
                "PathInputs": null,
                "PathInputs:commandLine": null,
                "PathInputs:commandLine:Type": null,
                "PathInputs:commandLine:Type:Name": "String",
                "PathInputs:commandLine:Required": "True",
                "PathInputs:commandLine:Name": "commandLine",
                "PathInputs:commandLine:Description": "The process command.",
                "OperationType": "Get",
                "OperationPath": "/v1/process-command-lines/{commandLine}/endpoints",
                "HeaderInputs": null,
                "HasJsonBody": "False",
                "HasFormUrlEncodedBody": "False",
                "EndpointUrlSettingName": "TaniumInstanceUrl",
                "EndpointUrl": "",
                "DefaultQueryStringValues": null,
                "DefaultHeaderValues": null,
                "BodyInputs": null
            },
            "skillSummaryMetadata": null,
            "enableVariableSubstitutionInCompose": false,
            "finalResponseSettings": null
        },
        {
            "skillset": null,
            "name": "List Endpoints with Process Name",
            "format": null,
            "displayName": "List Endpoints with Process Name",
            "altName": null,
            "dependencies": [],
            "description": "",
            "descriptionForModel": "",
            "examplePrompts": [
                "Using Tanium, return the endpoints running a process called process-name, so that I can ensure this process is not running on unexpected endpoints. Display the results in a table, sorted alphabetically by host name, and return a Tanium Console Question Results URL so that I can view the real-time list of endpoints. Thank you."
            ],
            "hidden": false,
            "inputs": [
                {
                    "required": true,
                    "defaultValue": null,
                    "placeholderValue": null,
                    "enum": null,
                    "name": "name",
                    "type": {
                        "name": "String"
                    },
                    "description": "The name or filename of the process."
                },
                {
                    "required": false,
                    "defaultValue": null,
                    "placeholderValue": null,
                    "enum": null,
                    "name": "timeRange",
                    "type": {
                        "name": "String"
                    },
                    "description": "The time range. Available values are \"30 minutes\", \"1 hour\", \"3 hours\", \"12 hours\", \"1 day\", \"3 days\", \"1 week\", \"1 month\". The default is \"1 hour\"."
                }
            ],
            "outputs": [],
            "promptAlignedName": null,
            "previewState": "GA",
            "previewStartTime": null,
            "userVisibilityFeatureFlags": [],
            "userVisibility": "Always",
            "plannerVisibilityFeatureFlags": [],
            "plannerVisibility": "Always",
            "settings": {
                "QueryInputs": null,
                "QueryInputs:timeRange": null,
                "QueryInputs:timeRange:Type": null,
                "QueryInputs:timeRange:Type:Name": "String",
                "QueryInputs:timeRange:Required": "False",
                "QueryInputs:timeRange:Name": "timeRange",
                "QueryInputs:timeRange:Description": "The time range. Available values are \"30 minutes\", \"1 hour\", \"3 hours\", \"12 hours\", \"1 day\", \"3 days\", \"1 week\", \"1 month\". The default is \"1 hour\".",
                "PathInputs": null,
                "PathInputs:name": null,
                "PathInputs:name:Type": null,
                "PathInputs:name:Type:Name": "String",
                "PathInputs:name:Required": "True",
                "PathInputs:name:Name": "name",
                "PathInputs:name:Description": "The name or filename of the process.",
                "OperationType": "Get",
                "OperationPath": "/v1/process-files/{name}/endpoints",
                "HeaderInputs": null,
                "HasJsonBody": "False",
                "HasFormUrlEncodedBody": "False",
                "EndpointUrlSettingName": "TaniumInstanceUrl",
                "EndpointUrl": "",
                "DefaultQueryStringValues": null,
                "DefaultHeaderValues": null,
                "BodyInputs": null
            },
            "skillSummaryMetadata": null,
            "enableVariableSubstitutionInCompose": false,
            "finalResponseSettings": null
        },
        {
            "skillset": null,
            "name": "List Endpoints with Process MD5 Hash",
            "format": null,
            "displayName": "List Endpoints with Process MD5 Hash",
            "altName": null,
            "dependencies": [],
            "description": "",
            "descriptionForModel": "",
            "examplePrompts": [
                "Show me processes that have run in the past with the specified MD5 hash."
            ],
            "hidden": false,
            "inputs": [
                {
                    "required": true,
                    "defaultValue": null,
                    "placeholderValue": null,
                    "enum": null,
                    "name": "md5Hash",
                    "type": {
                        "name": "String"
                    },
                    "description": "The MD5 hash of the process path."
                },
                {
                    "required": false,
                    "defaultValue": null,
                    "placeholderValue": null,
                    "enum": null,
                    "name": "timeRange",
                    "type": {
                        "name": "String"
                    },
                    "description": "The time range. Available values are \"30 minutes\", \"1 hour\", \"3 hours\", \"12 hours\", \"1 day\", \"3 days\", \"1 week\", \"1 month\". The default is \"1 hour\"."
                }
            ],
            "outputs": [],
            "promptAlignedName": null,
            "previewState": "GA",
            "previewStartTime": null,
            "userVisibilityFeatureFlags": [],
            "userVisibility": "Always",
            "plannerVisibilityFeatureFlags": [],
            "plannerVisibility": "Always",
            "settings": {
                "QueryInputs": null,
                "QueryInputs:timeRange": null,
                "QueryInputs:timeRange:Type": null,
                "QueryInputs:timeRange:Type:Name": "String",
                "QueryInputs:timeRange:Required": "False",
                "QueryInputs:timeRange:Name": "timeRange",
                "QueryInputs:timeRange:Description": "The time range. Available values are \"30 minutes\", \"1 hour\", \"3 hours\", \"12 hours\", \"1 day\", \"3 days\", \"1 week\", \"1 month\". The default is \"1 hour\".",
                "PathInputs": null,
                "PathInputs:md5Hash": null,
                "PathInputs:md5Hash:Type": null,
                "PathInputs:md5Hash:Type:Name": "String",
                "PathInputs:md5Hash:Required": "True",
                "PathInputs:md5Hash:Name": "md5Hash",
                "PathInputs:md5Hash:Description": "The MD5 hash of the process path.",
                "OperationType": "Get",
                "OperationPath": "/v1/process-hashes/{md5Hash}/endpoints",
                "HeaderInputs": null,
                "HasJsonBody": "False",
                "HasFormUrlEncodedBody": "False",
                "EndpointUrlSettingName": "TaniumInstanceUrl",
                "EndpointUrl": "",
                "DefaultQueryStringValues": null,
                "DefaultHeaderValues": null,
                "BodyInputs": null
            },
            "skillSummaryMetadata": null,
            "enableVariableSubstitutionInCompose": false,
            "finalResponseSettings": null
        },
        {
            "skillset": null,
            "name": "List Endpoints Vulnerable To CVE",
            "format": null,
            "displayName": "List Endpoints Vulnerable To CVE",
            "altName": null,
            "dependencies": [],
            "description": "",
            "descriptionForModel": "",
            "examplePrompts": [
                "Using Tanium, return the endpoints vulnerable to cve-id, so that I can remediate the vulnerability on these endpoints. Display the results in a table, sorted alphabetically by host name, and return a Tanium Console Question Results URL so that I can view the real-time list of endpoints. Thank you."
            ],
            "hidden": false,
            "inputs": [
                {
                    "required": true,
                    "defaultValue": null,
                    "placeholderValue": null,
                    "enum": null,
                    "name": "cveId",
                    "type": {
                        "name": "String"
                    },
                    "description": "Required. The CVE ID."
                }
            ],
            "outputs": [],
            "promptAlignedName": null,
            "previewState": "GA",
            "previewStartTime": null,
            "userVisibilityFeatureFlags": [],
            "userVisibility": "Always",
            "plannerVisibilityFeatureFlags": [],
            "plannerVisibility": "Always",
            "settings": {
                "QueryInputs": null,
                "PathInputs": null,
                "PathInputs:cveId": null,
                "PathInputs:cveId:Type": null,
                "PathInputs:cveId:Type:Name": "String",
                "PathInputs:cveId:Required": "True",
                "PathInputs:cveId:Name": "cveId",
                "PathInputs:cveId:Description": "Required. The CVE ID.",
                "OperationType": "Get",
                "OperationPath": "/v1/cves/{cveId}/vulnerable-endpoints",
                "HeaderInputs": null,
                "HasJsonBody": "False",
                "HasFormUrlEncodedBody": "False",
                "EndpointUrlSettingName": "TaniumInstanceUrl",
                "EndpointUrl": "",
                "DefaultQueryStringValues": null,
                "DefaultHeaderValues": null,
                "BodyInputs": null
            },
            "skillSummaryMetadata": null,
            "enableVariableSubstitutionInCompose": false,
            "finalResponseSettings": null
        },
        {
            "skillset": null,
            "name": "List Process SHA-256 Hashes and Versions",
            "format": null,
            "displayName": "List Process SHA-256 Hashes and Versions",
            "altName": null,
            "dependencies": [],
            "description": "",
            "descriptionForModel": "",
            "examplePrompts": [
                "Show me processes that are currently running with the specified file name."
            ],
            "hidden": false,
            "inputs": [
                {
                    "required": true,
                    "defaultValue": null,
                    "placeholderValue": null,
                    "enum": null,
                    "name": "filename",
                    "type": {
                        "name": "String"
                    },
                    "description": "Required. The process file name."
                },
                {
                    "required": false,
                    "defaultValue": null,
                    "placeholderValue": null,
                    "enum": null,
                    "name": "endpointName",
                    "type": {
                        "name": "String"
                    },
                    "description": "The endpoint name, that if provided, filters the results to endpoints that have the specified endpoint name. If this is not defined, this returns data from all endpoints that have the process."
                }
            ],
            "outputs": [],
            "promptAlignedName": null,
            "previewState": "GA",
            "previewStartTime": null,
            "userVisibilityFeatureFlags": [],
            "userVisibility": "Always",
            "plannerVisibilityFeatureFlags": [],
            "plannerVisibility": "Always",
            "settings": {
                "QueryInputs": null,
                "QueryInputs:endpointName": null,
                "QueryInputs:endpointName:Type": null,
                "QueryInputs:endpointName:Type:Name": "String",
                "QueryInputs:endpointName:Required": "False",
                "QueryInputs:endpointName:Name": "endpointName",
                "QueryInputs:endpointName:Description": "The endpoint name, that if provided, filters the results to endpoints that have the specified endpoint name. If this is not defined, this returns data from all endpoints that have the process.",
                "PathInputs": null,
                "PathInputs:filename": null,
                "PathInputs:filename:Type": null,
                "PathInputs:filename:Type:Name": "String",
                "PathInputs:filename:Required": "True",
                "PathInputs:filename:Name": "filename",
                "PathInputs:filename:Description": "Required. The process file name.",
                "OperationType": "Get",
                "OperationPath": "/v1/processes/{filename}/hashes",
                "HeaderInputs": null,
                "HasJsonBody": "False",
                "HasFormUrlEncodedBody": "False",
                "EndpointUrlSettingName": "TaniumInstanceUrl",
                "EndpointUrl": "",
                "DefaultQueryStringValues": null,
                "DefaultHeaderValues": null,
                "BodyInputs": null
            },
            "skillSummaryMetadata": null,
            "enableVariableSubstitutionInCompose": false,
            "finalResponseSettings": null
        },
        {
            "skillset": null,
            "name": "List Processes Connected To IPv4 Address",
            "format": null,
            "displayName": "List Processes Connected To IPv4 Address",
            "altName": null,
            "dependencies": [],
            "description": "",
            "descriptionForModel": "",
            "examplePrompts": [
                "Show me processes that have run in the past who have connected to the specified remote IP address."
            ],
            "hidden": false,
            "inputs": [
                {
                    "required": false,
                    "defaultValue": null,
                    "placeholderValue": null,
                    "enum": null,
                    "name": "ipAddress",
                    "type": {
                        "name": "String"
                    },
                    "description": "The IPv4 address to which the processes are connected."
                },
                {
                    "required": false,
                    "defaultValue": null,
                    "placeholderValue": null,
                    "enum": null,
                    "name": "endpointName",
                    "type": {
                        "name": "String"
                    },
                    "description": "The name of an endpoint that, if provided, filters the results to processes for only this endpoint. If this is not defined, this returns processes from all endpoints that have a process connected to the specified IPv4 address."
                },
                {
                    "required": false,
                    "defaultValue": null,
                    "placeholderValue": null,
                    "enum": null,
                    "name": "timeRange",
                    "type": {
                        "name": "String"
                    },
                    "description": "The time range. Available values are \"30 minutes\", \"1 hour\", \"3 hours\", \"12 hours\", \"1 day\", \"3 days\", \"1 week\", \"1 month\". The default is \"1 hour\"."
                }
            ],
            "outputs": [],
            "promptAlignedName": null,
            "previewState": "GA",
            "previewStartTime": null,
            "userVisibilityFeatureFlags": [],
            "userVisibility": "Always",
            "plannerVisibilityFeatureFlags": [],
            "plannerVisibility": "Always",
            "settings": {
                "QueryInputs": null,
                "QueryInputs:timeRange": null,
                "QueryInputs:timeRange:Type": null,
                "QueryInputs:timeRange:Type:Name": "String",
                "QueryInputs:timeRange:Required": "False",
                "QueryInputs:timeRange:Name": "timeRange",
                "QueryInputs:timeRange:Description": "The time range. Available values are \"30 minutes\", \"1 hour\", \"3 hours\", \"12 hours\", \"1 day\", \"3 days\", \"1 week\", \"1 month\". The default is \"1 hour\".",
                "QueryInputs:ipAddress": null,
                "QueryInputs:ipAddress:Type": null,
                "QueryInputs:ipAddress:Type:Name": "String",
                "QueryInputs:ipAddress:Required": "False",
                "QueryInputs:ipAddress:Name": "ipAddress",
                "QueryInputs:ipAddress:Description": "The IPv4 address to which the processes are connected.",
                "QueryInputs:endpointName": null,
                "QueryInputs:endpointName:Type": null,
                "QueryInputs:endpointName:Type:Name": "String",
                "QueryInputs:endpointName:Required": "False",
                "QueryInputs:endpointName:Name": "endpointName",
                "QueryInputs:endpointName:Description": "The name of an endpoint that, if provided, filters the results to processes for only this endpoint. If this is not defined, this returns processes from all endpoints that have a process connected to the specified IPv4 address.",
                "PathInputs": null,
                "OperationType": "Get",
                "OperationPath": "/v1/processes",
                "HeaderInputs": null,
                "HasJsonBody": "False",
                "HasFormUrlEncodedBody": "False",
                "EndpointUrlSettingName": "TaniumInstanceUrl",
                "EndpointUrl": "",
                "DefaultQueryStringValues": null,
                "DefaultHeaderValues": null,
                "BodyInputs": null
            },
            "skillSummaryMetadata": null,
            "enableVariableSubstitutionInCompose": false,
            "finalResponseSettings": null
        },
        {
            "skillset": null,
            "name": "List Processes Ran As User",
            "format": null,
            "displayName": "List Processes Ran As User",
            "altName": null,
            "dependencies": [],
            "description": "",
            "descriptionForModel": "",
            "examplePrompts": [
                "Show me processes that have run in the past by the specified user."
            ],
            "hidden": false,
            "inputs": [
                {
                    "required": true,
                    "defaultValue": null,
                    "placeholderValue": null,
                    "enum": null,
                    "name": "username",
                    "type": {
                        "name": "String"
                    },
                    "description": "The name of the user running a process."
                },
                {
                    "required": false,
                    "defaultValue": null,
                    "placeholderValue": null,
                    "enum": null,
                    "name": "endpointName",
                    "type": {
                        "name": "String"
                    },
                    "description": "The name of an endpoint that, if provided, filters the results to processes for only this endpoint. If this is not defined, this returns processes from all endpoints that have processes ran as the specified user."
                },
                {
                    "required": false,
                    "defaultValue": null,
                    "placeholderValue": null,
                    "enum": null,
                    "name": "timeRange",
                    "type": {
                        "name": "String"
                    },
                    "description": "The time range. Available values are \"30 minutes\", \"1 hour\", \"3 hours\", \"12 hours\", \"1 day\", \"3 days\", \"1 week\", \"1 month\". The default is \"1 hour\"."
                }
            ],
            "outputs": [],
            "promptAlignedName": null,
            "previewState": "GA",
            "previewStartTime": null,
            "userVisibilityFeatureFlags": [],
            "userVisibility": "Always",
            "plannerVisibilityFeatureFlags": [],
            "plannerVisibility": "Always",
            "settings": {
                "QueryInputs": null,
                "QueryInputs:timeRange": null,
                "QueryInputs:timeRange:Type": null,
                "QueryInputs:timeRange:Type:Name": "String",
                "QueryInputs:timeRange:Required": "False",
                "QueryInputs:timeRange:Name": "timeRange",
                "QueryInputs:timeRange:Description": "The time range. Available values are \"30 minutes\", \"1 hour\", \"3 hours\", \"12 hours\", \"1 day\", \"3 days\", \"1 week\", \"1 month\". The default is \"1 hour\".",
                "QueryInputs:endpointName": null,
                "QueryInputs:endpointName:Type": null,
                "QueryInputs:endpointName:Type:Name": "String",
                "QueryInputs:endpointName:Required": "False",
                "QueryInputs:endpointName:Name": "endpointName",
                "QueryInputs:endpointName:Description": "The name of an endpoint that, if provided, filters the results to processes for only this endpoint. If this is not defined, this returns processes from all endpoints that have processes ran as the specified user.",
                "PathInputs": null,
                "PathInputs:username": null,
                "PathInputs:username:Type": null,
                "PathInputs:username:Type:Name": "String",
                "PathInputs:username:Required": "True",
                "PathInputs:username:Name": "username",
                "PathInputs:username:Description": "The name of the user running a process.",
                "OperationType": "Get",
                "OperationPath": "/v1/processes/ran-as-user/{username}",
                "HeaderInputs": null,
                "HasJsonBody": "False",
                "HasFormUrlEncodedBody": "False",
                "EndpointUrlSettingName": "TaniumInstanceUrl",
                "EndpointUrl": "",
                "DefaultQueryStringValues": null,
                "DefaultHeaderValues": null,
                "BodyInputs": null
            },
            "skillSummaryMetadata": null,
            "enableVariableSubstitutionInCompose": false,
            "finalResponseSettings": null
        },
        {
            "skillset": null,
            "name": "Get Real-time Data from Endpoints",
            "format": null,
            "displayName": "Get Real-time Data from Endpoints",
            "altName": null,
            "dependencies": [],
            "description": "",
            "descriptionForModel": "",
            "examplePrompts": [
                "Using Tanium, return the computer name and IP address of endpoints. Display the results in a table, alphabetically sorted by computer name, and return a Tanium Console Question Results URL so that I can view the real-time list of endpoints. Thank you."
            ],
            "hidden": false,
            "inputs": [
                {
                    "required": false,
                    "defaultValue": null,
                    "placeholderValue": null,
                    "enum": null,
                    "name": "sensorName",
                    "type": {
                        "name": "String"
                    },
                    "description": "Required. The sensor name.\n- The \"Active Devices\" sensor retrieves all the hardware devices that are currently in use by a computer This sensor has the following columns: [\"Active Devices\"].\n- The \"AD Distinguished Name\" sensor retrieves the full active directory distinguished name for a computer from the registry This sensor has the following columns: [\"AD Distinguished Name\"].\n- The \"AD Organizational Unit\" sensor retrieves the active directory organizational unit (ou) where the machine is located. This sensor has the following columns: [\"AD Organizational Unit\"].\n- The \"AD Query - Local Administrators\" sensor retrieves the well known name of users and groups who are members of the local administrators group on a machine after the collect active directory info package has completed an inventory This sensor has the following columns: [\"Name\",\"Location\",\"Type\"].\n- The \"AD Query - Local Groups\" sensor retrieves the well-known names of all local groups from an active directory query. if the well-known name is not found, the sensor attempts to retrieve the group's name and if that fails, it retrieves the group's object sid. the sensor requires the 'collect active directory info' package to have completed an inventory before returning data This sensor has the following columns: [\"AD Query - Local Groups\"].\n- The \"AD Query - Local Users\" sensor retrieves the well known names of all local users on a system. this sensor is a part of the core ad query content solution and only returns data after the collect active directory info package has completed an inventory This sensor has the following columns: [\"AD Query - Local Users\"].\n- The \"AD Query - Primary User\" sensor retrieves the domain and well-known name of the primary user on a computer from active directory. this information is only retrieved after the 'collect active directory info' package has completed an inventory. if the inventory has not been conducted or the xml file containing the inventory data is not found, the script aborts with an error. if the primary user is not set in the inventory, the script also returns an error. the script supports the ability to override the domain and name attributes via an xml file This sensor has the following columns: [\"AD Query - Primary User\"].\n- The \"AutoRun Program Details\" sensor retrieves detailed information about autorun applications found in the windows registry. this includes the category, description, entry, entry location, image path, launch string, md5 hash, profile, publisher, sha-1 hash, and sha-256 hash of each autorun application This sensor has the following columns: [\"Entry Location\",\"Entry\",\"Category\",\"Profile\",\"Description\",\"Publisher\",\"Image Path\",\"Version\",\"Launch String\",\"MD5 Hash\",\"SHA-1 Hash\",\"SHA-256 Hash\"].\n- The \"BIOS Vendor\" sensor retrieves the manufacturer or vendor of the bios. this could be companies like dell, inc This sensor has the following columns: [\"BIOS Vendor\"].\n- The \"BIOS Version\" sensor retrieves the version of the bios using the dmidecode command in unix systems. if dmidecode is not available or returns an error, it tries to fetch the information from the sys class This sensor has the following columns: [\"BIOS Version\"].\n- The \"BitLocker Details\" sensor retrieves the bitlocker status of a machine including details such as drive letter, encryption method, protection status, conversion status, encryption percentage, lock status, and key protector type This sensor has the following columns: [\"Drive\",\"Encryption Method\",\"Protection Status\",\"Conversion Status\",\"Encryption Percentage\",\"Lock Status\",\"Key Protector Type\"].\n- The \"Boot Device\" sensor retrieves the hard disk device from which the operating system boots This sensor has the following columns: [\"Boot Device\"].\n- The \"Certificate Manager - SSL Certificate CA Short Name\" sensor retrieves a shortened certificate authority name used by tanium benchmark. if organization name is present, it returns that, otherwise, the common name is returned This sensor has the following columns: [\"Issuer\",\"Port\"].\n- The \"Certificate Manager - SSL Certificate Details\" sensor retrieves port, 'not before' date, 'not after' date, public key algorithm, public key bit size, signature algorithm, signature hash algorithm, subject, issuer, authorization status, root authority subject name, root authority subject key identifier, serial number, and sha1 fingerprint for all ssl/tls certificates This sensor has the following columns: [\"Port\",\"Not Before\",\"Not After\",\"Public Key Algorithm\",\"Public Key Bit Size\",\"Signature Algorithm\",\"Signature Hash Algorithm\",\"Subject\",\"Issuer\",\"Authorization Status\",\"Root Authority Subject Name\",\"Root Authority Subject Key Identifier\",\"Serial Number\",\"Sha1 Fingerprint\"].\n- The \"Certificate Manager - SSL Certificate Process Details\" sensor retrieves port, not before date, not after date, subject, issuer, authorization status, root authority subject name, root authority subject key identifier, owning process, and owning process description for all ssl certificates This sensor has the following columns: [\"Port\",\"Not Before\",\"Not After\",\"Subject\",\"Issuer\",\"Authorisation Status\",\"Root Authority Subject Name\",\"Root Authority Subject Key Identifier\",\"Owning Process\",\"Owning Process Description\"].\n- The \"Certificate Manager - SSL Extended Key Usage\" sensor retrieves the extended key usage field and port for ssl/tls certificates from server certificates details. it also checks the existence of necessary tools and files for operation, and provides error messages if they are missing This sensor has the following columns: [\"Port\",\"Extended Key Usage\"].\n- The \"Certificate Manager - SSL Key Usage\" sensor retrieves the key usage fields and the port for each ssl certificate on the server This sensor has the following columns: [\"Port\",\"Key Usage\"].\n- The \"Certificate Manager - SSL Server Root Certificate Authority\" sensor retrieves the port and authority type (self signed or unauthorized) for all ssl/tls server certificates This sensor has the following columns: [\"Port\",\"Subject Key Identifier\"].\n- The \"Certificate Manager - Supported SSL/TLS Protocols\" sensor retrieves the list of active ssl/tls protocols from the certificate manager tools. This sensor has the following columns: [\"Certificate Manager - Supported SSL/TLS Protocols\"].\n- The \"Chrome Extensions\" sensor retrieves the details of installed google chrome extensions for each user profile. the details include extension id, name, the path where it's installed, its state (enabled or disabled), the user it belongs to, and its version This sensor has the following columns: [\"User\",\"Chrome Profile\",\"Extension ID\",\"Extension Name\",\"Version\",\"State\",\"Path\"].\n- The \"Cloud Instance Hostname\" sensor retrieves the hostname of an instance running on a generic cloud provider, such as aws, azure, or google cloud. if the hostname is an empty string, it will return '[empty string]'. in case of any cloud error, it returns the exception. if the tanium cloud content is not installed or functional, it provides an error message accordingly This sensor has the following columns: [\"Cloud Instance Hostname\"].\n- The \"Comply - Architecture Type\" sensor retrieves the underlying architecture type of the operating system, which could be powerpc, sparc, x86, or x64 This sensor has the following columns: [\"Comply - Architecture Type\"].\n- The \"Comply - Compliance Exposure Score\" sensor retrieves the compliance exposure score. the score can be 'optimized', 'above average', 'average', 'below average', 'needs improvement', 'not scanned' This sensor has the following columns: [\"Comply - Compliance Exposure Score\"].\n- The \"Comply - Compliance Findings\" sensor retrieves the unique compliance findings present on a managed endpoint, including details such as compliance category, check id, exception status, rule id, and state This sensor has the following columns: [\"Check ID\",\"State\",\"Category\",\"Rule ID\",\"Excepted\",\"Scan Method\"].\n- The \"Comply - Compliance Findings - First Found\" sensor retrieves the initial discovery date for all unique compliance findings on an endpoint. the date is reset if the compliance finding state changes This sensor has the following columns: [\"First Found - Check ID\",\"First Found - Date\",\"Scan Method\"].\n- The \"Comply - Compliance Findings - Last Scan\" sensor retrieves the last scan date and check id for all the unique compliance findings present on an endpoint This sensor has the following columns: [\"Last Scan - Check ID\",\"Last Scan - Date\",\"Scan Method\"].\n- The \"Comply - Compliance Investigation Details\" sensor retrieves the actual values used to evaluate compliance test findings on an endpoint, along with the check id, test id, and test result This sensor has the following columns: [\"Check ID\",\"Test ID\",\"Test Result\",\"Actual Values\"].\n- The \"Comply - Compliance Percentage\" sensor retrieves the percentage of non-failed checks on a computer endpoint This sensor has the following columns: [\"Comply - Compliance Percentage\"].\n- The \"Comply - Coverage Status\" sensor retrieves the status of the comply tool on the endpoint, including whether it's installed, outdated, not targeted, initializing, needs attention or optimal This sensor has the following columns: [\"Comply - Coverage Status\"].\n- The \"Comply - CVE Findings - Last Scan\" sensor retrieves the last scan date and details for all identified vulnerabilities that the endpoint is currently susceptible to This sensor has the following columns: [\"Last Scan - CVE\",\"Last Scan - Date\",\"Scan Type\",\"Excepted\"].\n- The \"Comply - CVE Investigation Details\" sensor retrieves the actual values collected for evaluating the presence of vulnerability findings (cves) on an endpoint. this includes details about the check id, test id, and test result This sensor has the following columns: [\"Check ID\",\"Test ID\",\"Test Result\",\"Actual Values\"].\n- The \"Comply - Endpoint Scan Status\" sensor retrieves the scan status of an endpoint, only considering valid scans while ignoring stale assessments This sensor has the following columns: [\"Status\"].\n- The \"Comply - Has Been Scanned\" sensor determines if the endpoint has undergone a scan within the past 30 days This sensor has the following columns: [\"Comply - Has Been Scanned\"].\n- The \"Comply - Is Vulnerable\" sensor determines whether the endpoint is vulnerable or not by checking the status of the vulnerability view. the script checks for vulnerabilities that have been seen within a specific time frame This sensor has the following columns: [\"Comply - Is Vulnerable\"].\n- The \"Comply - NMap Scan Results\" sensor retrieves the nmap scan results for reporting in comply report scan reports including ip address, mac, age, services, ports, cpes, os cpes, and os cpe accuracies This sensor has the following columns: [\"IP Address\",\"MAC Address\",\"Result Age\",\"Services\",\"Ports\",\"CPEs\",\"OS CPEs\",\"OS CPE Accuracies\"].\n- The \"Comply - Open Ports\" sensor identifies the active tcp ports on a machine, along with the process linked to each port, the display name of the process, and the listening ip address and port. the sensor can be customized to exclude certain processes and ip ranges This sensor has the following columns: [\"Process\",\"Name\",\"Protocol\",\"Port\"].\n- The \"Comply - Oval Findings\" sensor retrieves the unique oval definitions associated with vulnerabilities found on an endpoint This sensor has the following columns: [\"Oval ID\"].\n- The \"Comply - Vulnerability Aggregates\" sensor aggregates vulnerability result data from scans, categorizing severity based on cvss v2 scores. it includes details such as error codes, hashes, and severities of different vulnerabilities This sensor has the following columns: [\"Engine\",\"Hash\",\"All\",\"Vulnerable\",\"Nonvulnerable\",\"Error\",\"High Severity\",\"Medium Severity\",\"Low Severity\",\"Error Code\"].\n- The \"Comply - Vulnerability Discovery Dates\" sensor retrieves the dates of first and last discovery of vulnerabilities, along with their exception status and scan type This sensor has the following columns: [\"CVE\",\"First Found Date\",\"Last Seen Date\",\"Scan Type\",\"Excepted\"].\n- The \"Computer ID\" sensor retrieves a unique identifier assigned to each computer for internal use This sensor has the following columns: [\"Computer ID\"].\n- The \"Computer Name\" sensor retrieves the assigned name of the client machine This sensor has the following columns: [\"Computer Name\"].\n- The \"CPU Details\" sensor retrieves the architecture or system type, cpu model, speed in mhz, total number of physical cpus, total number of cores and total number of logical processors of a system This sensor has the following columns: [\"System Type\",\"CPU\",\"CPU Speed\",\"Total Physical Processors\",\"Total Cores\",\"Total Logical Processors\"].\n- The \"Disk Drive Details\" sensor retrieves the name, device id, total size and free space of each disk partition on the computer This sensor has the following columns: [\"Name\",\"Drive Letter\",\"Size\",\"Free Space\"].\n- The \"Driver Details\" sensor retrieves details about all drivers loaded in the system including the driver name, state, path and version This sensor has the following columns: [\"Display Name\",\"State\",\"Path\",\"Version\"].\n- The \"Elevated Privileges\" sensor retrieves information about user attempts to elevate their privileges, including the status of the attempt, the user id involved, and the date and time of the attempt This sensor has the following columns: [\"Status\",\"UserID\",\"MoDay\",\"Time\"].\n- The \"Endpoint Fingerprint\" sensor retrieves a unique identifier for the endpoint based on the hardware. the identifier can be a bios serial number, mac address, manufacturer created guid, or a generated guid or timestamp if hardware based values are not available This sensor has the following columns: [\"Endpoint Fingerprint\"].\n- The \"Enforce - BitLocker Encryption Status\" sensor reports the bitlocker encryption status for each encryptable drive, including the drive letter, drive type, and encryption status This sensor has the following columns: [\"Encryption Status\",\"Drive Letter\",\"Drive Type\"].\n- The \"Enforce - BitLocker Protection Status\" sensor reports the status of bitlocker protection for each encryptable drive This sensor has the following columns: [\"Protection Status\"].\n- The \"Enforce - FileVault Encryption Status\" sensor retrieves the encryption status of filevault on a mac endpoint. the output can indicate whether encryption, decryption is in progress, or if filevault is on or off This sensor has the following columns: [\"Encryption Status\"].\n- The \"Enforce - Firewall Rules [Linux]\" sensor retrieves all the configured firewall rules on endpoints. the details include chain, destination address, destination port, in-interface, out-interface, protocol, rejection rule, source address, source port, state, table, and target This sensor has the following columns: [\"Table\",\"Chain\",\"Target\",\"Interface In\",\"Interface Out\",\"Protocol\",\"Source Address\",\"Source Port\",\"Destination Address\",\"Destination Port\",\"State\",\"Reject With\"].\n- The \"Enforce - Host Firewall Enabled\" sensor retrieves the status of the firewall, indicating whether it is enabled or not This sensor has the following columns: [\"Enforce - Host Firewall Enabled\"].\n- The \"Enforce - Quarantine Details\" sensor reports all quarantined threats, including details like severity, process name, file paths, remediation time, and any associated errors This sensor has the following columns: [\"Remediation Time\",\"Threat\",\"Severity\",\"Process Name\",\"Path\",\"Errors\"].\n- The \"Enforce - Tools Version\" sensor retrieves the version of enforce tools if installed and checks if all the required tools are present. it also checks for the installation status and support details of the tools This sensor has the following columns: [\"Enforce - Tools Version\"].\n- The \"Enforce - TPM Status\" sensor retrieves the status of the trusted platform module (tpm) including whether it is activated, enabled, owned, ready, manufacturer details, and specification version This sensor has the following columns: [\"Is Activated\",\"Is Enabled\",\"Is Owned\",\"Manufacturer\",\"Spec\",\"Is Ready\",\"Details\"].\n- The \"Enforce - USB Storage Devices\" sensor retrieves hardware ids for all usb storage devices from the device manager This sensor has the following columns: [\"Name\",\"Hardware ID\"].\n- The \"Firefox Extensions\" sensor retrieves installed firefox extensions for each user and profile from the addons.json file. the information includes extension name, version, state (enabled or disabled), and path This sensor has the following columns: [\"User\",\"Firefox Profile\",\"Extension\",\"Version\",\"State\",\"Path\"].\n- The \"Firewall Status\" sensor retrieves the current status of all the windows firewall profiles including domainprofile, publicprofile, standardprofile, and privateprofile. the status indicates whether each profile is enabled or disabled This sensor has the following columns: [\"Firewall Status\"].\n- The \"Impact - Active User Session SIDs\" sensor retrieves the security identifiers (sids) of users who currently have an active session on a domain-joined computer. it skips local accounts and sessions from certain domains such as 'nt authority', 'window manager', and 'workgroup'. it also skips sessions with certain logon types like 'undefined', 'network', 'proxy' This sensor has the following columns: [\"Impact - Active User Session SIDs\"].\n- The \"Impact - Administrator SIDs\" sensor retrieves the security identifiers (sids) of the domain users and groups included in the administrators group This sensor has the following columns: [\"Impact - Administrator SIDs\"].\n- The \"Installed Applications\" sensor retrieves a list of installed applications on a linux system, their versions, and whether they are uninstallable or not. the list also includes symlinked applications from guest operating systems if the client has parallels installed This sensor has the following columns: [\"Name\",\"Version\",\"Silent Uninstall String\",\"Uninstallable\"].\n- The \"Installed HotFixes\" sensor retrieves a list of hotfixes that have been applied to the system This sensor has the following columns: [\"Installed HotFixes\"].\n- The \"Installed Pkgs\" sensor retrieves a list of all installed software packages on a system This sensor has the following columns: [\"Installed Pkgs\"].\n- The \"Installed RPMs\" sensor retrieves a list of installed rpms by name on linux systems This sensor has the following columns: [\"Installed RPMs\"].\n- The \"Installed Store Apps\" sensor retrieves the names and versions of applications installed from the native os app store This sensor has the following columns: [\"Name\",\"Version\"].\n- The \"IP Address\" sensor retrieves the current ipv4 and ipv6 addresses of the client machine, excluding local addresses This sensor has the following columns: [\"IP Address\"].\n- The \"Kernel Modules\" sensor retrieves the active kernel modules in linux systems. This sensor has the following columns: [\"Kernel Modules\"].\n- The \"Kernel Version\" sensor retrieves the active kernel version of unix-based systems. it prefers tech-specific unames that patch kernel in-memory to prevent reporting the boot version on live patching capable machines This sensor has the following columns: [\"Kernel Version\"].\n- The \"Last Logged In User\" sensor retrieves the most recent user login information. if a user is currently logged in, it returns the details of that user. if no user is logged in, it provides information about the last user who logged in This sensor has the following columns: [\"Last Logged In User\"].\n- The \"Last Reboot\" sensor retrieves the timestamp of the last system reboot This sensor has the following columns: [\"Last Reboot\"].\n- The \"Listen Ports\" sensor retrieves data about network-aware processes and the ports they are bound to, including process names and the corresponding local ports. it uses the 'lsof' command to fetch this information This sensor has the following columns: [\"Process\",\"Name\",\"Local Port\"].\n- The \"Loaded Modules Not Matching Whitelist\" sensor retrieves the md5 hash and fully-qualified path of any loaded modules that are not included on the current md5 whitelist This sensor has the following columns: [\"Path\",\"MD5 Hash\"].\n- The \"Local Account Last Password Change Days Ago\" sensor retrieves the name of each local user account and the number of days since the password was last changed. This sensor has the following columns: [\"Account Name\",\"Days Since Last Password Change\"].\n- The \"Local Administrators\" sensor retrieves users and groups who are considered 'administrators' on unix platforms. it identifies the root users and groups by searching for user ids and group ids of zero in the /etc/passwd and /etc/group files respectively. it removes duplicate entries and returns a list of unique admin users This sensor has the following columns: [\"Local Administrators\"].\n- The \"Local Administrators Without Groups\" sensor retrieves the unique users who have local administrative privileges on a computer excluding the concept of nested groups. it specifically identifies the 'root' users from the list of local administrators This sensor has the following columns: [\"Local Administrators Without Groups\"].\n- The \"Local User Login Dates\" sensor retrieves the names of the last users to log in along with their corresponding login dates This sensor has the following columns: [\"Name\",\"Date\"].\n- The \"Manufacturer\" sensor identifies the type of virtual environment in which the system is running. it checks for various virtual platforms such as vmware, hyper-v, amazon ec2, xen, google compute engine, kvm, parallels, qemu, nutanix, openstack, ovirt, bhyve and others. if the system is not virtualized, it returns 'not virtual'. if the virtualization type cannot be determined, it returns 'unknown - dmidecode unavailable' This sensor has the following columns: [\"Manufacturer\"].\n- The \"Microsoft Defender AntiMalware Details\" sensor retrieves the version details of microsoft defender's antimalware engine and product, as well as the enabled status and running mode of the service This sensor has the following columns: [\"Engine Version\",\"Product Version\",\"Service Enabled\",\"Service State\"].\n- The \"Microsoft Defender AntiSpyware Details\" sensor retrieves the status and signature details of microsoft defender antispyware, including whether the service is enabled, the age of the signature, the date of the last update, and the version of the signature This sensor has the following columns: [\"Service Enabled\",\"Signature Days Age\",\"Signature Update Date\",\"Signature Version\"].\n- The \"Microsoft Defender AntiVirus Details\" sensor retrieves the status of microsoft defender antivirus service, the age of its signature, the date of the last signature update, and the version of the signature. This sensor has the following columns: [\"Service Enabled\",\"Signature Days Age\",\"Signature Update Date\",\"Signature Version\"].\n- The \"Microsoft Defender Computer ID\" sensor retrieves the unique guid (globally unique identifier) associated with microsoft defender installed on the machine This sensor has the following columns: [\"Microsoft Defender Computer ID\"].\n- The \"Microsoft Defender Extension Exclusions\" sensor retrieves the list of extensions that are excluded in microsoft defender. This sensor has the following columns: [\"Microsoft Defender Extension Exclusions\"].\n- The \"Microsoft Defender FullScan Details\" sensor retrieves fullscan age, if it's overdue, if it's required, the signature version, start time and end time of microsoft defender This sensor has the following columns: [\"Age\",\"Overdue\",\"Required\",\"Signature Version\",\"Start Time\",\"Stop Time\"].\n- The \"Microsoft Defender Health Details\" sensor retrieves the health status (true or false) and any health issues of microsoft defender. if any health issues exist, they are also reported This sensor has the following columns: [\"Healthy\",\"Health Issues\"].\n- The \"Microsoft Defender Installed\" sensor determines the presence of microsoft defender on the system by checking if the 'mdatp' command is available or if the 'mdatp' executable exists in the '/usr/bin/' directory This sensor has the following columns: [\"Microsoft Defender Installed\"].\n- The \"Microsoft Defender IP Address Exclusions\" sensor retrieves the ip addresses that are excluded in microsoft defender. This sensor has the following columns: [\"Microsoft Defender IP Address Exclusions\"].\n- The \"Microsoft Defender Network Inspection Service Details\" sensor retrieves the status, engine version, signature age in days, last updated date, and signature version of the microsoft defender network inspection service This sensor has the following columns: [\"Enabled\",\"Engine Version\",\"Signature Days Age\",\"Signature Last Updated\",\"Signature Version\"].\n- The \"Microsoft Defender On Access Protection Status\" sensor retrieves the status of microsoft defender's on access protection feature, indicating whether it is enabled or disabled, or if microsoft defender is not installed This sensor has the following columns: [\"Microsoft Defender On Access Protection Status\"].\n- The \"Microsoft Defender Org ID\" sensor retrieves the organization identifier associated with microsoft defender. this is typically a unique alphanumeric string used to identify different organizations within the microsoft defender system This sensor has the following columns: [\"Microsoft Defender Org ID\"].\n- The \"Microsoft Defender Path Exclusions\" sensor retrieves the list of file and folder exclusions configured in microsoft defender. This sensor has the following columns: [\"Microsoft Defender Path Exclusions\"].\n- The \"Microsoft Defender Process Exclusions\" sensor retrieves the list of processes that are excluded from microsoft defender. This sensor has the following columns: [\"Microsoft Defender Process Exclusions\"].\n- The \"Microsoft Defender QuickScan Details\" sensor retrieves the age, overdue status, signature version, start time and end time of a microsoft defender quickscan This sensor has the following columns: [\"Age\",\"Overdue\",\"Signature Version\",\"Start Time\",\"Stop Time\"].\n- The \"Microsoft Defender Real-Time Protection Status\" sensor retrieves the status of the tamper protection feature of microsoft defender, indicating whether it is enabled or not. This sensor has the following columns: [\"Microsoft Defender Real-Time Protection Status\"].\n- The \"Microsoft Defender Tamper Protection Status\" sensor retrieves the status of the microsoft defender tamper protection feature, indicating if it is enabled or disabled This sensor has the following columns: [\"Microsoft Defender Tamper Protection Status\"].\n- The \"Microsoft Defender Threat Details\" sensor retrieves the threat type, severity, execution status, active status, remediation status, and resources related to microsoft defender threats This sensor has the following columns: [\"Type\",\"Severity\",\"Executed\",\"Status\",\"Process\",\"Artifacts\",\"Detection Date\"].\n- The \"Microsoft Defender UI Lockdown Status\" sensor retrieves the status of the user interface lockdown feature for microsoft defender. it can return one of three statuses: 'enabled', 'disabled', or 'microsoft defender not installed'. in case of an error, it provides the error details This sensor has the following columns: [\"Microsoft Defender UI Lockdown Status\"].\n- The \"Motherboard Manufacturer\" sensor retrieves the manufacturer information of the system's motherboard. the script verifies the system's virtual platform and checks if it's a virtual machine or not. if the system is not a virtual machine, the script will retrieve the motherboard's manufacturer information. if the system is a virtual machine, the script will retrieve the system's manufacturer information instead This sensor has the following columns: [\"Motherboard Manufacturer\"].\n- The \"Motherboard Name\" sensor retrieves the product name of the motherboard or baseboard in a system, using dmidecode or system files This sensor has the following columns: [\"Motherboard Name\"].\n- The \"Number of Logged In Users\" sensor retrieves the quantity of interactively logged-in users, including remote desktop sessions on windows This sensor has the following columns: [\"Number of Logged In Users\"].\n- The \"Number Of Users\" sensor retrieves the count of user sessions for which state is being stored This sensor has the following columns: [\"Number Of Users\"].\n- The \"Online\" sensor retrieves the online status of a machine, returning the value 'true' to indicate an active internet connection This sensor has the following columns: [\"Online\"].\n- The \"Open Ports\" sensor retrieves the list of open tcp ports in a system. it uses either the 'netstat' or 'ss' command to get the list of open ports and filters out the ones that are not related to localhost This sensor has the following columns: [\"Open Ports\"].\n- The \"Open Share Details\" sensor retrieves details about open shares on a machine, including name, path, status, type, and permissions This sensor has the following columns: [\"Name\",\"Path\",\"Status\",\"Type\",\"Permissions\"].\n- The \"Open Shares\" sensor retrieves the names of all shared resources on a computer except for the default share, remote admin, and remote ipc. This sensor has the following columns: [\"Open Shares\"].\n- The \"Run Once Keys\" sensor retrieves the runonce keys from the registry which define what programs will be launched when a user logs into the system. it returns both system and user specific keys This sensor has the following columns: [\"Type\",\"Name\",\"Command Line\"].\n- The \"Running Applications\" sensor retrieves data about applications currently running on the client machine, including the application name, version, and process name This sensor has the following columns: [\"Name\",\"Version\",\"Process Name\"].\n- The \"Running Processes\" sensor retrieves the names of all processes currently active on the client machine This sensor has the following columns: [\"Running Processes\"].\n- The \"Running Processes With Filename Mismatch\" sensor gathers running processes and compares the original filename for each process binary on disk. if the running process name and the binary's original filename do not match, results are returned. this can potentially indicate that a legitimate binary has been copied and renamed in an attempt to avoid detection This sensor has the following columns: [\"Process\",\"Original Filename\",\"Internal Filename\"].\n- The \"Running Processes with MD5 Hash\" sensor retrieves the fully-qualified path and md5 hash of each running executable file This sensor has the following columns: [\"Path\",\"MD5 Hash\"].\n- The \"Running Service\" sensor retrieves a list of services that are currently active on the client machine. This sensor has the following columns: [\"Running Service\"].\n- The \"Startup Programs\" sensor retrieves a list of applications that are set to automatically run on system startup, along with the corresponding command line entries used to initiate these applications This sensor has the following columns: [\"Name\",\"Command Line\"].\n- The \"Unencrypted Wireless Networks\" sensor retrieves details of open and unencrypted wireless networks. this includes the ssid, mac address, connection state, network type, radio type, authentication method, receive rate, transmit rate, and signal strength This sensor has the following columns: [\"SSID\",\"MAC\",\"State\",\"Network Type\",\"Radio\",\"Authentication\",\"Receive\",\"Transmit\",\"Signal 0-5\"].\n- The \"Unsuccessful Elevated Privileges\" sensor retrieves the details of any unsuccessful attempts to elevate user privileges. the information includes the user id, the date (month and day), and the time the attempt was made This sensor has the following columns: [\"UserID\",\"MoDay\",\"Time\"].\n- The \"Uptime\" sensor retrieves the duration since the last reboot of a machine in days. This sensor has the following columns: [\"Uptime\"].\n- The \"USB Device\" sensor retrieves a list of usb devices currently connected to the client machine This sensor has the following columns: [\"USB Device\"].\n- The \"User Details\" sensor retrieves a list of local user accounts along with the corresponding full name of the users from a machine This sensor has the following columns: [\"User Account\",\"Full Name\"].\n- The \"User Sessions\" sensor retrieves information about the current sessions on the local machine including user session device, user session id, session name, session state, session type, and user name This sensor has the following columns: [\"Session Name\",\"User Name\",\"ID\",\"State\",\"Type\",\"Device\"].\n- The \"Windows OS Release ID\" sensor retrieves the windows os release id from the system registry, which is unique to each version of windows This sensor has the following columns: [\"Windows OS Release ID\"].\n- The \"Windows Security Center Registered Antivirus Software\" sensor retrieves the status of the antivirus software registered with the windows security center. this includes the name of the antivirus, whether its real-time protection is enabled, and the status of its signatures This sensor has the following columns: [\"Name\",\"Protection\",\"Definitions\"].\n- The \"Wireless Network Details\" sensor retrieves details related to the currently active wireless network connection including ssid, mac address, connection state, network type, radio type, authentication, receive rate, transmit rate, and signal strength This sensor has the following columns: [\"SSID\",\"MAC\",\"State\",\"Network Type\",\"Radio\",\"Authentication\",\"Receive\",\"Transmit\",\"Signal (0-5)\"].\n- The \"Wireless Networks Visible\" sensor retrieves information about the wireless networks visible to a machine, including ssid, network type, authentication method, and encryption level This sensor has the following columns: [\"SSID\",\"Network Type\",\"Authentication\",\"Encryption\"]."
                },
                {
                    "required": false,
                    "defaultValue": null,
                    "placeholderValue": null,
                    "enum": null,
                    "name": "filter.column",
                    "type": {
                        "name": "String"
                    },
                    "description": "The sensor column to filter on. For single column sensors, this field should be set to an empty string value."
                },
                {
                    "required": false,
                    "defaultValue": null,
                    "placeholderValue": null,
                    "enum": null,
                    "name": "filter.value",
                    "type": {
                        "name": "String"
                    },
                    "description": "The filter value."
                },
                {
                    "required": false,
                    "defaultValue": "FILTER_OPERATOR_UNSPECIFIED",
                    "placeholderValue": null,
                    "enum": null,
                    "name": "filter.operator",
                    "type": {
                        "name": "String"
                    },
                    "description": "The filter operator. The default operator is FILTER_OPERATOR_CONTAINS. Only use FILTER_OPERATOR_EQ if the word \"equals\" is used in the prompt. FILTER_OPERATOR_UNSPECIFIED should never be used.\n\n - FILTER_OPERATOR_UNSPECIFIED: Unspecified.\n - FILTER_OPERATOR_EQ: Equals.\n - FILTER_OPERATOR_CONTAINS: Contains."
                },
                {
                    "required": false,
                    "defaultValue": null,
                    "placeholderValue": null,
                    "enum": null,
                    "name": "endpointName",
                    "type": {
                        "name": "String"
                    },
                    "description": "An endpoint name that, if defined, filters the response to include sensor results for only this endpoint. If this is not defined, the response contains sensor results from all matching endpoints."
                }
            ],
            "outputs": [],
            "promptAlignedName": null,
            "previewState": "GA",
            "previewStartTime": null,
            "userVisibilityFeatureFlags": [],
            "userVisibility": "Always",
            "plannerVisibilityFeatureFlags": [],
            "plannerVisibility": "Always",
            "settings": {
                "QueryInputs": null,
                "QueryInputs:sensorName": null,
                "QueryInputs:sensorName:Type": null,
                "QueryInputs:sensorName:Type:Name": "String",
                "QueryInputs:sensorName:Required": "False",
                "QueryInputs:sensorName:Name": "sensorName",
                "QueryInputs:sensorName:Description": "Required. The sensor name.\n- The \"Active Devices\" sensor retrieves all the hardware devices that are currently in use by a computer This sensor has the following columns: [\"Active Devices\"].\n- The \"AD Distinguished Name\" sensor retrieves the full active directory distinguished name for a computer from the registry This sensor has the following columns: [\"AD Distinguished Name\"].\n- The \"AD Organizational Unit\" sensor retrieves the active directory organizational unit (ou) where the machine is located. This sensor has the following columns: [\"AD Organizational Unit\"].\n- The \"AD Query - Local Administrators\" sensor retrieves the well known name of users and groups who are members of the local administrators group on a machine after the collect active directory info package has completed an inventory This sensor has the following columns: [\"Name\",\"Location\",\"Type\"].\n- The \"AD Query - Local Groups\" sensor retrieves the well-known names of all local groups from an active directory query. if the well-known name is not found, the sensor attempts to retrieve the group's name and if that fails, it retrieves the group's object sid. the sensor requires the 'collect active directory info' package to have completed an inventory before returning data This sensor has the following columns: [\"AD Query - Local Groups\"].\n- The \"AD Query - Local Users\" sensor retrieves the well known names of all local users on a system. this sensor is a part of the core ad query content solution and only returns data after the collect active directory info package has completed an inventory This sensor has the following columns: [\"AD Query - Local Users\"].\n- The \"AD Query - Primary User\" sensor retrieves the domain and well-known name of the primary user on a computer from active directory. this information is only retrieved after the 'collect active directory info' package has completed an inventory. if the inventory has not been conducted or the xml file containing the inventory data is not found, the script aborts with an error. if the primary user is not set in the inventory, the script also returns an error. the script supports the ability to override the domain and name attributes via an xml file This sensor has the following columns: [\"AD Query - Primary User\"].\n- The \"AutoRun Program Details\" sensor retrieves detailed information about autorun applications found in the windows registry. this includes the category, description, entry, entry location, image path, launch string, md5 hash, profile, publisher, sha-1 hash, and sha-256 hash of each autorun application This sensor has the following columns: [\"Entry Location\",\"Entry\",\"Category\",\"Profile\",\"Description\",\"Publisher\",\"Image Path\",\"Version\",\"Launch String\",\"MD5 Hash\",\"SHA-1 Hash\",\"SHA-256 Hash\"].\n- The \"BIOS Vendor\" sensor retrieves the manufacturer or vendor of the bios. this could be companies like dell, inc This sensor has the following columns: [\"BIOS Vendor\"].\n- The \"BIOS Version\" sensor retrieves the version of the bios using the dmidecode command in unix systems. if dmidecode is not available or returns an error, it tries to fetch the information from the sys class This sensor has the following columns: [\"BIOS Version\"].\n- The \"BitLocker Details\" sensor retrieves the bitlocker status of a machine including details such as drive letter, encryption method, protection status, conversion status, encryption percentage, lock status, and key protector type This sensor has the following columns: [\"Drive\",\"Encryption Method\",\"Protection Status\",\"Conversion Status\",\"Encryption Percentage\",\"Lock Status\",\"Key Protector Type\"].\n- The \"Boot Device\" sensor retrieves the hard disk device from which the operating system boots This sensor has the following columns: [\"Boot Device\"].\n- The \"Certificate Manager - SSL Certificate CA Short Name\" sensor retrieves a shortened certificate authority name used by tanium benchmark. if organization name is present, it returns that, otherwise, the common name is returned This sensor has the following columns: [\"Issuer\",\"Port\"].\n- The \"Certificate Manager - SSL Certificate Details\" sensor retrieves port, 'not before' date, 'not after' date, public key algorithm, public key bit size, signature algorithm, signature hash algorithm, subject, issuer, authorization status, root authority subject name, root authority subject key identifier, serial number, and sha1 fingerprint for all ssl/tls certificates This sensor has the following columns: [\"Port\",\"Not Before\",\"Not After\",\"Public Key Algorithm\",\"Public Key Bit Size\",\"Signature Algorithm\",\"Signature Hash Algorithm\",\"Subject\",\"Issuer\",\"Authorization Status\",\"Root Authority Subject Name\",\"Root Authority Subject Key Identifier\",\"Serial Number\",\"Sha1 Fingerprint\"].\n- The \"Certificate Manager - SSL Certificate Process Details\" sensor retrieves port, not before date, not after date, subject, issuer, authorization status, root authority subject name, root authority subject key identifier, owning process, and owning process description for all ssl certificates This sensor has the following columns: [\"Port\",\"Not Before\",\"Not After\",\"Subject\",\"Issuer\",\"Authorisation Status\",\"Root Authority Subject Name\",\"Root Authority Subject Key Identifier\",\"Owning Process\",\"Owning Process Description\"].\n- The \"Certificate Manager - SSL Extended Key Usage\" sensor retrieves the extended key usage field and port for ssl/tls certificates from server certificates details. it also checks the existence of necessary tools and files for operation, and provides error messages if they are missing This sensor has the following columns: [\"Port\",\"Extended Key Usage\"].\n- The \"Certificate Manager - SSL Key Usage\" sensor retrieves the key usage fields and the port for each ssl certificate on the server This sensor has the following columns: [\"Port\",\"Key Usage\"].\n- The \"Certificate Manager - SSL Server Root Certificate Authority\" sensor retrieves the port and authority type (self signed or unauthorized) for all ssl/tls server certificates This sensor has the following columns: [\"Port\",\"Subject Key Identifier\"].\n- The \"Certificate Manager - Supported SSL/TLS Protocols\" sensor retrieves the list of active ssl/tls protocols from the certificate manager tools. This sensor has the following columns: [\"Certificate Manager - Supported SSL/TLS Protocols\"].\n- The \"Chrome Extensions\" sensor retrieves the details of installed google chrome extensions for each user profile. the details include extension id, name, the path where it's installed, its state (enabled or disabled), the user it belongs to, and its version This sensor has the following columns: [\"User\",\"Chrome Profile\",\"Extension ID\",\"Extension Name\",\"Version\",\"State\",\"Path\"].\n- The \"Cloud Instance Hostname\" sensor retrieves the hostname of an instance running on a generic cloud provider, such as aws, azure, or google cloud. if the hostname is an empty string, it will return '[empty string]'. in case of any cloud error, it returns the exception. if the tanium cloud content is not installed or functional, it provides an error message accordingly This sensor has the following columns: [\"Cloud Instance Hostname\"].\n- The \"Comply - Architecture Type\" sensor retrieves the underlying architecture type of the operating system, which could be powerpc, sparc, x86, or x64 This sensor has the following columns: [\"Comply - Architecture Type\"].\n- The \"Comply - Compliance Exposure Score\" sensor retrieves the compliance exposure score. the score can be 'optimized', 'above average', 'average', 'below average', 'needs improvement', 'not scanned' This sensor has the following columns: [\"Comply - Compliance Exposure Score\"].\n- The \"Comply - Compliance Findings\" sensor retrieves the unique compliance findings present on a managed endpoint, including details such as compliance category, check id, exception status, rule id, and state This sensor has the following columns: [\"Check ID\",\"State\",\"Category\",\"Rule ID\",\"Excepted\",\"Scan Method\"].\n- The \"Comply - Compliance Findings - First Found\" sensor retrieves the initial discovery date for all unique compliance findings on an endpoint. the date is reset if the compliance finding state changes This sensor has the following columns: [\"First Found - Check ID\",\"First Found - Date\",\"Scan Method\"].\n- The \"Comply - Compliance Findings - Last Scan\" sensor retrieves the last scan date and check id for all the unique compliance findings present on an endpoint This sensor has the following columns: [\"Last Scan - Check ID\",\"Last Scan - Date\",\"Scan Method\"].\n- The \"Comply - Compliance Investigation Details\" sensor retrieves the actual values used to evaluate compliance test findings on an endpoint, along with the check id, test id, and test result This sensor has the following columns: [\"Check ID\",\"Test ID\",\"Test Result\",\"Actual Values\"].\n- The \"Comply - Compliance Percentage\" sensor retrieves the percentage of non-failed checks on a computer endpoint This sensor has the following columns: [\"Comply - Compliance Percentage\"].\n- The \"Comply - Coverage Status\" sensor retrieves the status of the comply tool on the endpoint, including whether it's installed, outdated, not targeted, initializing, needs attention or optimal This sensor has the following columns: [\"Comply - Coverage Status\"].\n- The \"Comply - CVE Findings - Last Scan\" sensor retrieves the last scan date and details for all identified vulnerabilities that the endpoint is currently susceptible to This sensor has the following columns: [\"Last Scan - CVE\",\"Last Scan - Date\",\"Scan Type\",\"Excepted\"].\n- The \"Comply - CVE Investigation Details\" sensor retrieves the actual values collected for evaluating the presence of vulnerability findings (cves) on an endpoint. this includes details about the check id, test id, and test result This sensor has the following columns: [\"Check ID\",\"Test ID\",\"Test Result\",\"Actual Values\"].\n- The \"Comply - Endpoint Scan Status\" sensor retrieves the scan status of an endpoint, only considering valid scans while ignoring stale assessments This sensor has the following columns: [\"Status\"].\n- The \"Comply - Has Been Scanned\" sensor determines if the endpoint has undergone a scan within the past 30 days This sensor has the following columns: [\"Comply - Has Been Scanned\"].\n- The \"Comply - Is Vulnerable\" sensor determines whether the endpoint is vulnerable or not by checking the status of the vulnerability view. the script checks for vulnerabilities that have been seen within a specific time frame This sensor has the following columns: [\"Comply - Is Vulnerable\"].\n- The \"Comply - NMap Scan Results\" sensor retrieves the nmap scan results for reporting in comply report scan reports including ip address, mac, age, services, ports, cpes, os cpes, and os cpe accuracies This sensor has the following columns: [\"IP Address\",\"MAC Address\",\"Result Age\",\"Services\",\"Ports\",\"CPEs\",\"OS CPEs\",\"OS CPE Accuracies\"].\n- The \"Comply - Open Ports\" sensor identifies the active tcp ports on a machine, along with the process linked to each port, the display name of the process, and the listening ip address and port. the sensor can be customized to exclude certain processes and ip ranges This sensor has the following columns: [\"Process\",\"Name\",\"Protocol\",\"Port\"].\n- The \"Comply - Oval Findings\" sensor retrieves the unique oval definitions associated with vulnerabilities found on an endpoint This sensor has the following columns: [\"Oval ID\"].\n- The \"Comply - Vulnerability Aggregates\" sensor aggregates vulnerability result data from scans, categorizing severity based on cvss v2 scores. it includes details such as error codes, hashes, and severities of different vulnerabilities This sensor has the following columns: [\"Engine\",\"Hash\",\"All\",\"Vulnerable\",\"Nonvulnerable\",\"Error\",\"High Severity\",\"Medium Severity\",\"Low Severity\",\"Error Code\"].\n- The \"Comply - Vulnerability Discovery Dates\" sensor retrieves the dates of first and last discovery of vulnerabilities, along with their exception status and scan type This sensor has the following columns: [\"CVE\",\"First Found Date\",\"Last Seen Date\",\"Scan Type\",\"Excepted\"].\n- The \"Computer ID\" sensor retrieves a unique identifier assigned to each computer for internal use This sensor has the following columns: [\"Computer ID\"].\n- The \"Computer Name\" sensor retrieves the assigned name of the client machine This sensor has the following columns: [\"Computer Name\"].\n- The \"CPU Details\" sensor retrieves the architecture or system type, cpu model, speed in mhz, total number of physical cpus, total number of cores and total number of logical processors of a system This sensor has the following columns: [\"System Type\",\"CPU\",\"CPU Speed\",\"Total Physical Processors\",\"Total Cores\",\"Total Logical Processors\"].\n- The \"Disk Drive Details\" sensor retrieves the name, device id, total size and free space of each disk partition on the computer This sensor has the following columns: [\"Name\",\"Drive Letter\",\"Size\",\"Free Space\"].\n- The \"Driver Details\" sensor retrieves details about all drivers loaded in the system including the driver name, state, path and version This sensor has the following columns: [\"Display Name\",\"State\",\"Path\",\"Version\"].\n- The \"Elevated Privileges\" sensor retrieves information about user attempts to elevate their privileges, including the status of the attempt, the user id involved, and the date and time of the attempt This sensor has the following columns: [\"Status\",\"UserID\",\"MoDay\",\"Time\"].\n- The \"Endpoint Fingerprint\" sensor retrieves a unique identifier for the endpoint based on the hardware. the identifier can be a bios serial number, mac address, manufacturer created guid, or a generated guid or timestamp if hardware based values are not available This sensor has the following columns: [\"Endpoint Fingerprint\"].\n- The \"Enforce - BitLocker Encryption Status\" sensor reports the bitlocker encryption status for each encryptable drive, including the drive letter, drive type, and encryption status This sensor has the following columns: [\"Encryption Status\",\"Drive Letter\",\"Drive Type\"].\n- The \"Enforce - BitLocker Protection Status\" sensor reports the status of bitlocker protection for each encryptable drive This sensor has the following columns: [\"Protection Status\"].\n- The \"Enforce - FileVault Encryption Status\" sensor retrieves the encryption status of filevault on a mac endpoint. the output can indicate whether encryption, decryption is in progress, or if filevault is on or off This sensor has the following columns: [\"Encryption Status\"].\n- The \"Enforce - Firewall Rules [Linux]\" sensor retrieves all the configured firewall rules on endpoints. the details include chain, destination address, destination port, in-interface, out-interface, protocol, rejection rule, source address, source port, state, table, and target This sensor has the following columns: [\"Table\",\"Chain\",\"Target\",\"Interface In\",\"Interface Out\",\"Protocol\",\"Source Address\",\"Source Port\",\"Destination Address\",\"Destination Port\",\"State\",\"Reject With\"].\n- The \"Enforce - Host Firewall Enabled\" sensor retrieves the status of the firewall, indicating whether it is enabled or not This sensor has the following columns: [\"Enforce - Host Firewall Enabled\"].\n- The \"Enforce - Quarantine Details\" sensor reports all quarantined threats, including details like severity, process name, file paths, remediation time, and any associated errors This sensor has the following columns: [\"Remediation Time\",\"Threat\",\"Severity\",\"Process Name\",\"Path\",\"Errors\"].\n- The \"Enforce - Tools Version\" sensor retrieves the version of enforce tools if installed and checks if all the required tools are present. it also checks for the installation status and support details of the tools This sensor has the following columns: [\"Enforce - Tools Version\"].\n- The \"Enforce - TPM Status\" sensor retrieves the status of the trusted platform module (tpm) including whether it is activated, enabled, owned, ready, manufacturer details, and specification version This sensor has the following columns: [\"Is Activated\",\"Is Enabled\",\"Is Owned\",\"Manufacturer\",\"Spec\",\"Is Ready\",\"Details\"].\n- The \"Enforce - USB Storage Devices\" sensor retrieves hardware ids for all usb storage devices from the device manager This sensor has the following columns: [\"Name\",\"Hardware ID\"].\n- The \"Firefox Extensions\" sensor retrieves installed firefox extensions for each user and profile from the addons.json file. the information includes extension name, version, state (enabled or disabled), and path This sensor has the following columns: [\"User\",\"Firefox Profile\",\"Extension\",\"Version\",\"State\",\"Path\"].\n- The \"Firewall Status\" sensor retrieves the current status of all the windows firewall profiles including domainprofile, publicprofile, standardprofile, and privateprofile. the status indicates whether each profile is enabled or disabled This sensor has the following columns: [\"Firewall Status\"].\n- The \"Impact - Active User Session SIDs\" sensor retrieves the security identifiers (sids) of users who currently have an active session on a domain-joined computer. it skips local accounts and sessions from certain domains such as 'nt authority', 'window manager', and 'workgroup'. it also skips sessions with certain logon types like 'undefined', 'network', 'proxy' This sensor has the following columns: [\"Impact - Active User Session SIDs\"].\n- The \"Impact - Administrator SIDs\" sensor retrieves the security identifiers (sids) of the domain users and groups included in the administrators group This sensor has the following columns: [\"Impact - Administrator SIDs\"].\n- The \"Installed Applications\" sensor retrieves a list of installed applications on a linux system, their versions, and whether they are uninstallable or not. the list also includes symlinked applications from guest operating systems if the client has parallels installed This sensor has the following columns: [\"Name\",\"Version\",\"Silent Uninstall String\",\"Uninstallable\"].\n- The \"Installed HotFixes\" sensor retrieves a list of hotfixes that have been applied to the system This sensor has the following columns: [\"Installed HotFixes\"].\n- The \"Installed Pkgs\" sensor retrieves a list of all installed software packages on a system This sensor has the following columns: [\"Installed Pkgs\"].\n- The \"Installed RPMs\" sensor retrieves a list of installed rpms by name on linux systems This sensor has the following columns: [\"Installed RPMs\"].\n- The \"Installed Store Apps\" sensor retrieves the names and versions of applications installed from the native os app store This sensor has the following columns: [\"Name\",\"Version\"].\n- The \"IP Address\" sensor retrieves the current ipv4 and ipv6 addresses of the client machine, excluding local addresses This sensor has the following columns: [\"IP Address\"].\n- The \"Kernel Modules\" sensor retrieves the active kernel modules in linux systems. This sensor has the following columns: [\"Kernel Modules\"].\n- The \"Kernel Version\" sensor retrieves the active kernel version of unix-based systems. it prefers tech-specific unames that patch kernel in-memory to prevent reporting the boot version on live patching capable machines This sensor has the following columns: [\"Kernel Version\"].\n- The \"Last Logged In User\" sensor retrieves the most recent user login information. if a user is currently logged in, it returns the details of that user. if no user is logged in, it provides information about the last user who logged in This sensor has the following columns: [\"Last Logged In User\"].\n- The \"Last Reboot\" sensor retrieves the timestamp of the last system reboot This sensor has the following columns: [\"Last Reboot\"].\n- The \"Listen Ports\" sensor retrieves data about network-aware processes and the ports they are bound to, including process names and the corresponding local ports. it uses the 'lsof' command to fetch this information This sensor has the following columns: [\"Process\",\"Name\",\"Local Port\"].\n- The \"Loaded Modules Not Matching Whitelist\" sensor retrieves the md5 hash and fully-qualified path of any loaded modules that are not included on the current md5 whitelist This sensor has the following columns: [\"Path\",\"MD5 Hash\"].\n- The \"Local Account Last Password Change Days Ago\" sensor retrieves the name of each local user account and the number of days since the password was last changed. This sensor has the following columns: [\"Account Name\",\"Days Since Last Password Change\"].\n- The \"Local Administrators\" sensor retrieves users and groups who are considered 'administrators' on unix platforms. it identifies the root users and groups by searching for user ids and group ids of zero in the /etc/passwd and /etc/group files respectively. it removes duplicate entries and returns a list of unique admin users This sensor has the following columns: [\"Local Administrators\"].\n- The \"Local Administrators Without Groups\" sensor retrieves the unique users who have local administrative privileges on a computer excluding the concept of nested groups. it specifically identifies the 'root' users from the list of local administrators This sensor has the following columns: [\"Local Administrators Without Groups\"].\n- The \"Local User Login Dates\" sensor retrieves the names of the last users to log in along with their corresponding login dates This sensor has the following columns: [\"Name\",\"Date\"].\n- The \"Manufacturer\" sensor identifies the type of virtual environment in which the system is running. it checks for various virtual platforms such as vmware, hyper-v, amazon ec2, xen, google compute engine, kvm, parallels, qemu, nutanix, openstack, ovirt, bhyve and others. if the system is not virtualized, it returns 'not virtual'. if the virtualization type cannot be determined, it returns 'unknown - dmidecode unavailable' This sensor has the following columns: [\"Manufacturer\"].\n- The \"Microsoft Defender AntiMalware Details\" sensor retrieves the version details of microsoft defender's antimalware engine and product, as well as the enabled status and running mode of the service This sensor has the following columns: [\"Engine Version\",\"Product Version\",\"Service Enabled\",\"Service State\"].\n- The \"Microsoft Defender AntiSpyware Details\" sensor retrieves the status and signature details of microsoft defender antispyware, including whether the service is enabled, the age of the signature, the date of the last update, and the version of the signature This sensor has the following columns: [\"Service Enabled\",\"Signature Days Age\",\"Signature Update Date\",\"Signature Version\"].\n- The \"Microsoft Defender AntiVirus Details\" sensor retrieves the status of microsoft defender antivirus service, the age of its signature, the date of the last signature update, and the version of the signature. This sensor has the following columns: [\"Service Enabled\",\"Signature Days Age\",\"Signature Update Date\",\"Signature Version\"].\n- The \"Microsoft Defender Computer ID\" sensor retrieves the unique guid (globally unique identifier) associated with microsoft defender installed on the machine This sensor has the following columns: [\"Microsoft Defender Computer ID\"].\n- The \"Microsoft Defender Extension Exclusions\" sensor retrieves the list of extensions that are excluded in microsoft defender. This sensor has the following columns: [\"Microsoft Defender Extension Exclusions\"].\n- The \"Microsoft Defender FullScan Details\" sensor retrieves fullscan age, if it's overdue, if it's required, the signature version, start time and end time of microsoft defender This sensor has the following columns: [\"Age\",\"Overdue\",\"Required\",\"Signature Version\",\"Start Time\",\"Stop Time\"].\n- The \"Microsoft Defender Health Details\" sensor retrieves the health status (true or false) and any health issues of microsoft defender. if any health issues exist, they are also reported This sensor has the following columns: [\"Healthy\",\"Health Issues\"].\n- The \"Microsoft Defender Installed\" sensor determines the presence of microsoft defender on the system by checking if the 'mdatp' command is available or if the 'mdatp' executable exists in the '/usr/bin/' directory This sensor has the following columns: [\"Microsoft Defender Installed\"].\n- The \"Microsoft Defender IP Address Exclusions\" sensor retrieves the ip addresses that are excluded in microsoft defender. This sensor has the following columns: [\"Microsoft Defender IP Address Exclusions\"].\n- The \"Microsoft Defender Network Inspection Service Details\" sensor retrieves the status, engine version, signature age in days, last updated date, and signature version of the microsoft defender network inspection service This sensor has the following columns: [\"Enabled\",\"Engine Version\",\"Signature Days Age\",\"Signature Last Updated\",\"Signature Version\"].\n- The \"Microsoft Defender On Access Protection Status\" sensor retrieves the status of microsoft defender's on access protection feature, indicating whether it is enabled or disabled, or if microsoft defender is not installed This sensor has the following columns: [\"Microsoft Defender On Access Protection Status\"].\n- The \"Microsoft Defender Org ID\" sensor retrieves the organization identifier associated with microsoft defender. this is typically a unique alphanumeric string used to identify different organizations within the microsoft defender system This sensor has the following columns: [\"Microsoft Defender Org ID\"].\n- The \"Microsoft Defender Path Exclusions\" sensor retrieves the list of file and folder exclusions configured in microsoft defender. This sensor has the following columns: [\"Microsoft Defender Path Exclusions\"].\n- The \"Microsoft Defender Process Exclusions\" sensor retrieves the list of processes that are excluded from microsoft defender. This sensor has the following columns: [\"Microsoft Defender Process Exclusions\"].\n- The \"Microsoft Defender QuickScan Details\" sensor retrieves the age, overdue status, signature version, start time and end time of a microsoft defender quickscan This sensor has the following columns: [\"Age\",\"Overdue\",\"Signature Version\",\"Start Time\",\"Stop Time\"].\n- The \"Microsoft Defender Real-Time Protection Status\" sensor retrieves the status of the tamper protection feature of microsoft defender, indicating whether it is enabled or not. This sensor has the following columns: [\"Microsoft Defender Real-Time Protection Status\"].\n- The \"Microsoft Defender Tamper Protection Status\" sensor retrieves the status of the microsoft defender tamper protection feature, indicating if it is enabled or disabled This sensor has the following columns: [\"Microsoft Defender Tamper Protection Status\"].\n- The \"Microsoft Defender Threat Details\" sensor retrieves the threat type, severity, execution status, active status, remediation status, and resources related to microsoft defender threats This sensor has the following columns: [\"Type\",\"Severity\",\"Executed\",\"Status\",\"Process\",\"Artifacts\",\"Detection Date\"].\n- The \"Microsoft Defender UI Lockdown Status\" sensor retrieves the status of the user interface lockdown feature for microsoft defender. it can return one of three statuses: 'enabled', 'disabled', or 'microsoft defender not installed'. in case of an error, it provides the error details This sensor has the following columns: [\"Microsoft Defender UI Lockdown Status\"].\n- The \"Motherboard Manufacturer\" sensor retrieves the manufacturer information of the system's motherboard. the script verifies the system's virtual platform and checks if it's a virtual machine or not. if the system is not a virtual machine, the script will retrieve the motherboard's manufacturer information. if the system is a virtual machine, the script will retrieve the system's manufacturer information instead This sensor has the following columns: [\"Motherboard Manufacturer\"].\n- The \"Motherboard Name\" sensor retrieves the product name of the motherboard or baseboard in a system, using dmidecode or system files This sensor has the following columns: [\"Motherboard Name\"].\n- The \"Number of Logged In Users\" sensor retrieves the quantity of interactively logged-in users, including remote desktop sessions on windows This sensor has the following columns: [\"Number of Logged In Users\"].\n- The \"Number Of Users\" sensor retrieves the count of user sessions for which state is being stored This sensor has the following columns: [\"Number Of Users\"].\n- The \"Online\" sensor retrieves the online status of a machine, returning the value 'true' to indicate an active internet connection This sensor has the following columns: [\"Online\"].\n- The \"Open Ports\" sensor retrieves the list of open tcp ports in a system. it uses either the 'netstat' or 'ss' command to get the list of open ports and filters out the ones that are not related to localhost This sensor has the following columns: [\"Open Ports\"].\n- The \"Open Share Details\" sensor retrieves details about open shares on a machine, including name, path, status, type, and permissions This sensor has the following columns: [\"Name\",\"Path\",\"Status\",\"Type\",\"Permissions\"].\n- The \"Open Shares\" sensor retrieves the names of all shared resources on a computer except for the default share, remote admin, and remote ipc. This sensor has the following columns: [\"Open Shares\"].\n- The \"Run Once Keys\" sensor retrieves the runonce keys from the registry which define what programs will be launched when a user logs into the system. it returns both system and user specific keys This sensor has the following columns: [\"Type\",\"Name\",\"Command Line\"].\n- The \"Running Applications\" sensor retrieves data about applications currently running on the client machine, including the application name, version, and process name This sensor has the following columns: [\"Name\",\"Version\",\"Process Name\"].\n- The \"Running Processes\" sensor retrieves the names of all processes currently active on the client machine This sensor has the following columns: [\"Running Processes\"].\n- The \"Running Processes With Filename Mismatch\" sensor gathers running processes and compares the original filename for each process binary on disk. if the running process name and the binary's original filename do not match, results are returned. this can potentially indicate that a legitimate binary has been copied and renamed in an attempt to avoid detection This sensor has the following columns: [\"Process\",\"Original Filename\",\"Internal Filename\"].\n- The \"Running Processes with MD5 Hash\" sensor retrieves the fully-qualified path and md5 hash of each running executable file This sensor has the following columns: [\"Path\",\"MD5 Hash\"].\n- The \"Running Service\" sensor retrieves a list of services that are currently active on the client machine. This sensor has the following columns: [\"Running Service\"].\n- The \"Startup Programs\" sensor retrieves a list of applications that are set to automatically run on system startup, along with the corresponding command line entries used to initiate these applications This sensor has the following columns: [\"Name\",\"Command Line\"].\n- The \"Unencrypted Wireless Networks\" sensor retrieves details of open and unencrypted wireless networks. this includes the ssid, mac address, connection state, network type, radio type, authentication method, receive rate, transmit rate, and signal strength This sensor has the following columns: [\"SSID\",\"MAC\",\"State\",\"Network Type\",\"Radio\",\"Authentication\",\"Receive\",\"Transmit\",\"Signal 0-5\"].\n- The \"Unsuccessful Elevated Privileges\" sensor retrieves the details of any unsuccessful attempts to elevate user privileges. the information includes the user id, the date (month and day), and the time the attempt was made This sensor has the following columns: [\"UserID\",\"MoDay\",\"Time\"].\n- The \"Uptime\" sensor retrieves the duration since the last reboot of a machine in days. This sensor has the following columns: [\"Uptime\"].\n- The \"USB Device\" sensor retrieves a list of usb devices currently connected to the client machine This sensor has the following columns: [\"USB Device\"].\n- The \"User Details\" sensor retrieves a list of local user accounts along with the corresponding full name of the users from a machine This sensor has the following columns: [\"User Account\",\"Full Name\"].\n- The \"User Sessions\" sensor retrieves information about the current sessions on the local machine including user session device, user session id, session name, session state, session type, and user name This sensor has the following columns: [\"Session Name\",\"User Name\",\"ID\",\"State\",\"Type\",\"Device\"].\n- The \"Windows OS Release ID\" sensor retrieves the windows os release id from the system registry, which is unique to each version of windows This sensor has the following columns: [\"Windows OS Release ID\"].\n- The \"Windows Security Center Registered Antivirus Software\" sensor retrieves the status of the antivirus software registered with the windows security center. this includes the name of the antivirus, whether its real-time protection is enabled, and the status of its signatures This sensor has the following columns: [\"Name\",\"Protection\",\"Definitions\"].\n- The \"Wireless Network Details\" sensor retrieves details related to the currently active wireless network connection including ssid, mac address, connection state, network type, radio type, authentication, receive rate, transmit rate, and signal strength This sensor has the following columns: [\"SSID\",\"MAC\",\"State\",\"Network Type\",\"Radio\",\"Authentication\",\"Receive\",\"Transmit\",\"Signal (0-5)\"].\n- The \"Wireless Networks Visible\" sensor retrieves information about the wireless networks visible to a machine, including ssid, network type, authentication method, and encryption level This sensor has the following columns: [\"SSID\",\"Network Type\",\"Authentication\",\"Encryption\"].",
                "QueryInputs:filter.value": null,
                "QueryInputs:filter.value:Type": null,
                "QueryInputs:filter.value:Type:Name": "String",
                "QueryInputs:filter.value:Required": "False",
                "QueryInputs:filter.value:Name": "filter.value",
                "QueryInputs:filter.value:Description": "The filter value.",
                "QueryInputs:filter.operator": null,
                "QueryInputs:filter.operator:Type": null,
                "QueryInputs:filter.operator:Type:Name": "String",
                "QueryInputs:filter.operator:Required": "False",
                "QueryInputs:filter.operator:Name": "filter.operator",
                "QueryInputs:filter.operator:Description": "The filter operator. The default operator is FILTER_OPERATOR_CONTAINS. Only use FILTER_OPERATOR_EQ if the word \"equals\" is used in the prompt. FILTER_OPERATOR_UNSPECIFIED should never be used.\n\n - FILTER_OPERATOR_UNSPECIFIED: Unspecified.\n - FILTER_OPERATOR_EQ: Equals.\n - FILTER_OPERATOR_CONTAINS: Contains.",
                "QueryInputs:filter.operator:DefaultValue": "FILTER_OPERATOR_UNSPECIFIED",
                "QueryInputs:filter.column": null,
                "QueryInputs:filter.column:Type": null,
                "QueryInputs:filter.column:Type:Name": "String",
                "QueryInputs:filter.column:Required": "False",
                "QueryInputs:filter.column:Name": "filter.column",
                "QueryInputs:filter.column:Description": "The sensor column to filter on. For single column sensors, this field should be set to an empty string value.",
                "QueryInputs:endpointName": null,
                "QueryInputs:endpointName:Type": null,
                "QueryInputs:endpointName:Type:Name": "String",
                "QueryInputs:endpointName:Required": "False",
                "QueryInputs:endpointName:Name": "endpointName",
                "QueryInputs:endpointName:Description": "An endpoint name that, if defined, filters the response to include sensor results for only this endpoint. If this is not defined, the response contains sensor results from all matching endpoints.",
                "PathInputs": null,
                "OperationType": "Get",
                "OperationPath": "/v1/sensor-results",
                "HeaderInputs": null,
                "HasJsonBody": "False",
                "HasFormUrlEncodedBody": "False",
                "EndpointUrlSettingName": "TaniumInstanceUrl",
                "EndpointUrl": "",
                "DefaultQueryStringValues": null,
                "DefaultHeaderValues": null,
                "BodyInputs": null
            },
            "skillSummaryMetadata": null,
            "enableVariableSubstitutionInCompose": false,
            "finalResponseSettings": null
        },
        {
            "skillset": null,
            "name": "List File Operations",
            "format": null,
            "displayName": "List File Operations",
            "altName": null,
            "dependencies": [],
            "description": "Returns a question URL that can be used to view the real-time list of file operations. A preview of results is included. The preview should be displayed in a table.",
            "descriptionForModel": "Returns a question URL that can be used to view the real-time list of file operations. A preview of results is included. The preview should be displayed in a table.",
            "examplePrompts": [],
            "hidden": false,
            "inputs": [
                {
                    "required": false,
                    "defaultValue": null,
                    "placeholderValue": null,
                    "enum": null,
                    "name": "filePath",
                    "type": {
                        "name": "String"
                    },
                    "description": "The partial file path."
                },
                {
                    "required": false,
                    "defaultValue": null,
                    "placeholderValue": null,
                    "enum": null,
                    "name": "endpointName",
                    "type": {
                        "name": "String"
                    },
                    "description": "The endpoint name."
                },
                {
                    "required": false,
                    "defaultValue": null,
                    "placeholderValue": null,
                    "enum": null,
                    "name": "timeRange",
                    "type": {
                        "name": "String"
                    },
                    "description": "The time range. Available values are \"30 minutes\", \"1 hour\", \"3 hours\", \"12 hours\", \"1 day\", \"3 days\", \"1 week\", \"1 month\". The default is \"1 hour\"."
                }
            ],
            "outputs": [],
            "promptAlignedName": null,
            "previewState": "GA",
            "previewStartTime": null,
            "userVisibilityFeatureFlags": [],
            "userVisibility": "Always",
            "plannerVisibilityFeatureFlags": [],
            "plannerVisibility": "Always",
            "settings": {
                "QueryInputs": null,
                "QueryInputs:timeRange": null,
                "QueryInputs:timeRange:Type": null,
                "QueryInputs:timeRange:Type:Name": "String",
                "QueryInputs:timeRange:Required": "False",
                "QueryInputs:timeRange:Name": "timeRange",
                "QueryInputs:timeRange:Description": "The time range. Available values are \"30 minutes\", \"1 hour\", \"3 hours\", \"12 hours\", \"1 day\", \"3 days\", \"1 week\", \"1 month\". The default is \"1 hour\".",
                "QueryInputs:filePath": null,
                "QueryInputs:filePath:Type": null,
                "QueryInputs:filePath:Type:Name": "String",
                "QueryInputs:filePath:Required": "False",
                "QueryInputs:filePath:Name": "filePath",
                "QueryInputs:filePath:Description": "The partial file path.",
                "QueryInputs:endpointName": null,
                "QueryInputs:endpointName:Type": null,
                "QueryInputs:endpointName:Type:Name": "String",
                "QueryInputs:endpointName:Required": "False",
                "QueryInputs:endpointName:Name": "endpointName",
                "QueryInputs:endpointName:Description": "The endpoint name.",
                "PathInputs": null,
                "OperationType": "Get",
                "OperationPath": "/v1/file-operations",
                "HeaderInputs": null,
                "HasJsonBody": "False",
                "HasFormUrlEncodedBody": "False",
                "EndpointUrlSettingName": "TaniumInstanceUrl",
                "EndpointUrl": "",
                "DefaultQueryStringValues": null,
                "DefaultHeaderValues": null,
                "BodyInputs": null
            },
            "skillSummaryMetadata": null,
            "enableVariableSubstitutionInCompose": false,
            "finalResponseSettings": null
        },
        {
            "skillset": null,
            "name": "List Service Module Details",
            "format": null,
            "displayName": "List Service Module Details",
            "altName": null,
            "dependencies": [],
            "description": "",
            "descriptionForModel": "",
            "examplePrompts": [
                "Using Tanium, return information for the service modules running on the endpoint with the hostname hostname, so that I can review the list for unexpected service modules. Display the results in a table, alphabetically sorted by service module name, and return a Tanium Console Question Results URL so that I can view the real-time list of service modules. Thank you."
            ],
            "hidden": false,
            "inputs": [
                {
                    "required": true,
                    "defaultValue": null,
                    "placeholderValue": null,
                    "enum": null,
                    "name": "endpointName",
                    "type": {
                        "name": "String"
                    },
                    "description": "The endpoint name."
                }
            ],
            "outputs": [],
            "promptAlignedName": null,
            "previewState": "GA",
            "previewStartTime": null,
            "userVisibilityFeatureFlags": [],
            "userVisibility": "Always",
            "plannerVisibilityFeatureFlags": [],
            "plannerVisibility": "Always",
            "settings": {
                "QueryInputs": null,
                "PathInputs": null,
                "PathInputs:endpointName": null,
                "PathInputs:endpointName:Type": null,
                "PathInputs:endpointName:Type:Name": "String",
                "PathInputs:endpointName:Required": "True",
                "PathInputs:endpointName:Name": "endpointName",
                "PathInputs:endpointName:Description": "The endpoint name.",
                "OperationType": "Get",
                "OperationPath": "/v1/endpoints/{endpointName}/service-module-details",
                "HeaderInputs": null,
                "HasJsonBody": "False",
                "HasFormUrlEncodedBody": "False",
                "EndpointUrlSettingName": "TaniumInstanceUrl",
                "EndpointUrl": "",
                "DefaultQueryStringValues": null,
                "DefaultHeaderValues": null,
                "BodyInputs": null
            },
            "skillSummaryMetadata": null,
            "enableVariableSubstitutionInCompose": false,
            "finalResponseSettings": null
        },
        {
            "skillset": null,
            "name": "List Service Process Details",
            "format": null,
            "displayName": "List Service Process Details",
            "altName": null,
            "dependencies": [],
            "description": "",
            "descriptionForModel": "",
            "examplePrompts": [
                "Using Tanium, return information for the service processes running on the endpoint with the hostname hostname, so that I can review the list for unexpected service processes. Display the results in a table, alphabetically sorted by service process name, and return a Tanium Console Question Results URL so that I can view the real-time list of service processes. Thank you."
            ],
            "hidden": false,
            "inputs": [
                {
                    "required": true,
                    "defaultValue": null,
                    "placeholderValue": null,
                    "enum": null,
                    "name": "endpointName",
                    "type": {
                        "name": "String"
                    },
                    "description": "The endpoint name."
                }
            ],
            "outputs": [],
            "promptAlignedName": null,
            "previewState": "GA",
            "previewStartTime": null,
            "userVisibilityFeatureFlags": [],
            "userVisibility": "Always",
            "plannerVisibilityFeatureFlags": [],
            "plannerVisibility": "Always",
            "settings": {
                "QueryInputs": null,
                "PathInputs": null,
                "PathInputs:endpointName": null,
                "PathInputs:endpointName:Type": null,
                "PathInputs:endpointName:Type:Name": "String",
                "PathInputs:endpointName:Required": "True",
                "PathInputs:endpointName:Name": "endpointName",
                "PathInputs:endpointName:Description": "The endpoint name.",
                "OperationType": "Get",
                "OperationPath": "/v1/endpoints/{endpointName}/service-process-details",
                "HeaderInputs": null,
                "HasJsonBody": "False",
                "HasFormUrlEncodedBody": "False",
                "EndpointUrlSettingName": "TaniumInstanceUrl",
                "EndpointUrl": "",
                "DefaultQueryStringValues": null,
                "DefaultHeaderValues": null,
                "BodyInputs": null
            },
            "skillSummaryMetadata": null,
            "enableVariableSubstitutionInCompose": false,
            "finalResponseSettings": null
        },
        {
            "skillset": null,
            "name": "Get Logged In User",
            "format": null,
            "displayName": "Get Logged In User",
            "altName": null,
            "dependencies": [],
            "description": "",
            "descriptionForModel": "",
            "examplePrompts": [
                "Using Tanium, return the user currently logged into the endpoint with the hostname win10-x64 so that I can investigate possible unauthorized endpoint use. Return a Tanium Console Question Results URL so that I can view more real-time information for this endpoint. Thank you."
            ],
            "hidden": false,
            "inputs": [
                {
                    "required": true,
                    "defaultValue": null,
                    "placeholderValue": null,
                    "enum": null,
                    "name": "endpointName",
                    "type": {
                        "name": "String"
                    },
                    "description": "The endpoint name."
                }
            ],
            "outputs": [],
            "promptAlignedName": null,
            "previewState": "GA",
            "previewStartTime": null,
            "userVisibilityFeatureFlags": [],
            "userVisibility": "Always",
            "plannerVisibilityFeatureFlags": [],
            "plannerVisibility": "Always",
            "settings": {
                "QueryInputs": null,
                "PathInputs": null,
                "PathInputs:endpointName": null,
                "PathInputs:endpointName:Type": null,
                "PathInputs:endpointName:Type:Name": "String",
                "PathInputs:endpointName:Required": "True",
                "PathInputs:endpointName:Name": "endpointName",
                "PathInputs:endpointName:Description": "The endpoint name.",
                "OperationType": "Get",
                "OperationPath": "/v1/endpoints/{endpointName}/logged-in-user",
                "HeaderInputs": null,
                "HasJsonBody": "False",
                "HasFormUrlEncodedBody": "False",
                "EndpointUrlSettingName": "TaniumInstanceUrl",
                "EndpointUrl": "",
                "DefaultQueryStringValues": null,
                "DefaultHeaderValues": null,
                "BodyInputs": null
            },
            "skillSummaryMetadata": null,
            "enableVariableSubstitutionInCompose": false,
            "finalResponseSettings": null
        },
        {
            "skillset": null,
            "name": "List WMI Event Consumers",
            "format": null,
            "displayName": "List WMI Event Consumers",
            "altName": null,
            "dependencies": [],
            "description": "",
            "descriptionForModel": "",
            "examplePrompts": [
                "Using Tanium, return the WMI event consumers running on the endpoint with the hostname hostname so that I can ensure only expected event consumers are running, and return a Tanium Console Question Results URL so that I can view the real-time list of event consumers. Thank you."
            ],
            "hidden": false,
            "inputs": [
                {
                    "required": true,
                    "defaultValue": null,
                    "placeholderValue": null,
                    "enum": null,
                    "name": "endpointName",
                    "type": {
                        "name": "String"
                    },
                    "description": "The endpoint name."
                }
            ],
            "outputs": [],
            "promptAlignedName": null,
            "previewState": "GA",
            "previewStartTime": null,
            "userVisibilityFeatureFlags": [],
            "userVisibility": "Always",
            "plannerVisibilityFeatureFlags": [],
            "plannerVisibility": "Always",
            "settings": {
                "QueryInputs": null,
                "PathInputs": null,
                "PathInputs:endpointName": null,
                "PathInputs:endpointName:Type": null,
                "PathInputs:endpointName:Type:Name": "String",
                "PathInputs:endpointName:Required": "True",
                "PathInputs:endpointName:Name": "endpointName",
                "PathInputs:endpointName:Description": "The endpoint name.",
                "OperationType": "Get",
                "OperationPath": "/v1/endpoints/{endpointName}/wmi-event-consumers",
                "HeaderInputs": null,
                "HasJsonBody": "False",
                "HasFormUrlEncodedBody": "False",
                "EndpointUrlSettingName": "TaniumInstanceUrl",
                "EndpointUrl": "",
                "DefaultQueryStringValues": null,
                "DefaultHeaderValues": null,
                "BodyInputs": null
            },
            "skillSummaryMetadata": null,
            "enableVariableSubstitutionInCompose": false,
            "finalResponseSettings": null
        },
        {
            "skillset": null,
            "name": "View Endpoint Processes",
            "format": null,
            "displayName": "View Endpoint Processes",
            "altName": null,
            "dependencies": [],
            "description": "",
            "descriptionForModel": "",
            "examplePrompts": [
                "Using Tanium, return a Threat Response Live Connection URL for the endpoint with the hostname hostname, so that I can review the running processes and identify potential vulnerabilities. Thank you."
            ],
            "hidden": false,
            "inputs": [
                {
                    "required": true,
                    "defaultValue": null,
                    "placeholderValue": null,
                    "enum": null,
                    "name": "endpointName",
                    "type": {
                        "name": "String"
                    },
                    "description": "The endpoint name."
                },
                {
                    "required": false,
                    "defaultValue": null,
                    "placeholderValue": null,
                    "enum": null,
                    "name": "command",
                    "type": {
                        "name": "String"
                    },
                    "description": "The partial command line string that, if provided, will be used to filter the endpoint processes to those that contain this string in their executed command-line command."
                }
            ],
            "outputs": [],
            "promptAlignedName": null,
            "previewState": "GA",
            "previewStartTime": null,
            "userVisibilityFeatureFlags": [],
            "userVisibility": "Always",
            "plannerVisibilityFeatureFlags": [],
            "plannerVisibility": "Always",
            "settings": {
                "QueryInputs": null,
                "QueryInputs:command": null,
                "QueryInputs:command:Type": null,
                "QueryInputs:command:Type:Name": "String",
                "QueryInputs:command:Required": "False",
                "QueryInputs:command:Name": "command",
                "QueryInputs:command:Description": "The partial command line string that, if provided, will be used to filter the endpoint processes to those that contain this string in their executed command-line command.",
                "PathInputs": null,
                "PathInputs:endpointName": null,
                "PathInputs:endpointName:Type": null,
                "PathInputs:endpointName:Type:Name": "String",
                "PathInputs:endpointName:Required": "True",
                "PathInputs:endpointName:Name": "endpointName",
                "PathInputs:endpointName:Description": "The endpoint name.",
                "OperationType": "Get",
                "OperationPath": "/v1/endpoints/{endpointName}/process-view-url",
                "HeaderInputs": null,
                "HasJsonBody": "False",
                "HasFormUrlEncodedBody": "False",
                "EndpointUrlSettingName": "TaniumInstanceUrl",
                "EndpointUrl": "",
                "DefaultQueryStringValues": null,
                "DefaultHeaderValues": null,
                "BodyInputs": null
            },
            "skillSummaryMetadata": null,
            "enableVariableSubstitutionInCompose": false,
            "finalResponseSettings": null
        },
        {
            "skillset": null,
            "name": "List File Details",
            "format": null,
            "displayName": "List File Details",
            "altName": null,
            "dependencies": [],
            "description": "",
            "descriptionForModel": "",
            "examplePrompts": [
                "Using Tanium, return information for the file named file-name so that I can determine if it is running on unintended endpoints. Display the results in a table, alphabetically sorted, and return a Tanium Console Question Results URL so that I can view the real-time list. Thank you."
            ],
            "hidden": false,
            "inputs": [
                {
                    "required": true,
                    "defaultValue": null,
                    "placeholderValue": null,
                    "enum": null,
                    "name": "filename",
                    "type": {
                        "name": "String"
                    },
                    "description": "Required. The file name. This should not include the directory path."
                },
                {
                    "required": false,
                    "defaultValue": null,
                    "placeholderValue": null,
                    "enum": null,
                    "name": "endpointName",
                    "type": {
                        "name": "String"
                    },
                    "description": "The endpoint name, that if provided, filters the results to endpoints that have the specified endpoint name. If this is not defined, this returns data from all endpoints that have the file."
                }
            ],
            "outputs": [],
            "promptAlignedName": null,
            "previewState": "GA",
            "previewStartTime": null,
            "userVisibilityFeatureFlags": [],
            "userVisibility": "Always",
            "plannerVisibilityFeatureFlags": [],
            "plannerVisibility": "Always",
            "settings": {
                "QueryInputs": null,
                "QueryInputs:endpointName": null,
                "QueryInputs:endpointName:Type": null,
                "QueryInputs:endpointName:Type:Name": "String",
                "QueryInputs:endpointName:Required": "False",
                "QueryInputs:endpointName:Name": "endpointName",
                "QueryInputs:endpointName:Description": "The endpoint name, that if provided, filters the results to endpoints that have the specified endpoint name. If this is not defined, this returns data from all endpoints that have the file.",
                "PathInputs": null,
                "PathInputs:filename": null,
                "PathInputs:filename:Type": null,
                "PathInputs:filename:Type:Name": "String",
                "PathInputs:filename:Required": "True",
                "PathInputs:filename:Name": "filename",
                "PathInputs:filename:Description": "Required. The file name. This should not include the directory path.",
                "OperationType": "Get",
                "OperationPath": "/v1/files/{filename}/details",
                "HeaderInputs": null,
                "HasJsonBody": "False",
                "HasFormUrlEncodedBody": "False",
                "EndpointUrlSettingName": "TaniumInstanceUrl",
                "EndpointUrl": "",
                "DefaultQueryStringValues": null,
                "DefaultHeaderValues": null,
                "BodyInputs": null
            },
            "skillSummaryMetadata": null,
            "enableVariableSubstitutionInCompose": false,
            "finalResponseSettings": null
        }
    ],
    "nextLink": null
}