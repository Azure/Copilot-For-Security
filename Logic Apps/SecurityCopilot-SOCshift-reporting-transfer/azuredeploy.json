{
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion":  "1.0.0.0",
    "parameters":  {
        "PlaybookName":  {
            "defaultValue":  "SecurityCopilot-SOCshift-reporting-transfer",
            "type":  "string"
        }
        ,
         "EmailTo": {
            "defaultValue": "",
            "type": "String"
        }
    },
    "variables":  {
        "Office365ConnectionName":  "[concat('Office365-', parameters('PlaybookName'))]",
        "SecuritycopilotConnectionName":  "[concat('Securitycopilot-', parameters('PlaybookName'))]"
    },
    "resources":  [
        {
            "properties":  {
                "provisioningState":  "Succeeded",
                "state":  "Enabled",
                "definition":  {
                    "$schema":  "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion":  "1.0.0.0",
                    "parameters":  {
                        "$connections":  {
                            "defaultValue":  {
                            },
                            "type":  "Object"
                        }
                    },
                    "triggers":  {
                        "Recurrence":  {
                            "recurrence":  {
                                "frequency": "day",
                            "interval": 1
                            },
                            "evaluatedRecurrence":  {
                                 "frequency": "day",
                            "interval": 1
                            },
                            "type":  "Recurrence"
                        }
                    },
                    "actions":  {
                        "Counter_Int":  {
                            "runAfter":  {
                                "Parse_JSON_2":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "SetVariable",
                            "inputs":  {
                                "name":  "counter",
                                "value":  "@int(body('Parse_JSON_2')?['Evaluation Result Content'])"
                            }
                        },
                        "Get_number_of_incidents_for_the_counter":  {
                            "runAfter":  {
                                "Incidents_split":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "body":  {
                                    "PromptContent":  "Count the number of incidents you mentioned above, this will be used in an automation workflow that only accepts a single string. Provide the incident count in a response with no text before or after",
                                    "SessionId":  "@body('Run_Copilot_for_Security_prompt')?['sessionId']"
                                },
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['securitycopilot']['connectionId']"
                                    }
                                },
                                "method":  "post",
                                "path":  "/process-prompt"
                            }
                        },
                        "Incidents_split":  {
                            "runAfter":  {
                                "Parse_JSON":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "SetVariable",
                            "inputs":  {
                                "name":  "incidents",
                                "value":  "@split(body('Parse_JSON')?['Evaluation Result Content'], ',')"
                            }
                        },
                        "Initialize_variable":  {
                            "runAfter":  {
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "Soc Email address",
                                        "type":  "string",
                                        "value": "[parameters('EmailTo')]"
                                    }
                                ]
                            }
                        },
                        "Parse_JSON":  {
                            "runAfter":  {
                                "Run_Copilot_for_Security_prompt":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ParseJson",
                            "inputs":  {
                                "content":  "@body('Run_Copilot_for_Security_prompt')",
                                "schema":  {
                                    "properties":  {
                                        "Evaluation Result Content":  {
                                            "type":  "string"
                                        },
                                        "Evaluation Result Type":  {
                                            "type":  "string"
                                        },
                                        "Prompt Content":  {
                                            "type":  "string"
                                        },
                                        "SessionId":  {
                                            "type":  "string"
                                        },
                                        "Skill Name":  {
                                        },
                                        "Skill Sources":  {
                                            "type":  "array"
                                        }
                                    },
                                    "type":  "object"
                                }
                            }
                        },
                        "Parse_JSON_2":  {
                            "runAfter":  {
                                "Get_number_of_incidents_for_the_counter":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ParseJson",
                            "inputs":  {
                                "content":  "@body('Get_number_of_incidents_for_the_counter')",
                                "schema":  {
                                    "properties":  {
                                        "Evaluation Result Content":  {
                                            "type":  "string"
                                        },
                                        "Evaluation Result Type":  {
                                            "type":  "string"
                                        },
                                        "Prompt Content":  {
                                            "type":  "string"
                                        },
                                        "SessionId":  {
                                            "type":  "string"
                                        },
                                        "Skill Name":  {
                                        },
                                        "Skill Sources":  {
                                            "type":  "array"
                                        }
                                    },
                                    "type":  "object"
                                }
                            }
                        },
                        "Report_variable":  {
                            "runAfter":  {
                                "counter_variable":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "Report",
                                        "type":  "string"
                                    }
                                ]
                            }
                        },
                        "Run_Copilot_for_Security_prompt":  {
                            "runAfter":  {
                                "Report_variable":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "body":  {
                                    "PromptContent":  "I'm a SOC analyst leader and our SOC is in the phase for changing a shift, can you summarize all the defender incident that opened in the last 24 hr and if they are in status in progress, from the above response only take the incident number, this will be used in an automation workflow that only accepts a single string. Provide the incident number in a response with no text before or after"
                                },
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['securitycopilot']['connectionId']"
                                    }
                                },
                                "method":  "post",
                                "path":  "/process-prompt"
                            }
                        },
                        "Send_an_email_(V2)":  {
                            "runAfter":  {
                                "Until":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "body":  {
                                    "Body":  "\u003cp\u003e@{variables('Report')}\u003c/p\u003e",
                                    "Importance":  "Normal",
                                    "Subject":  "Last Shift open Incidents",
                                    "To":  "@variables('Soc Email address')"
                                },
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['office365']['connectionId']"
                                    }
                                },
                                "method":  "post",
                                "path":  "/v2/Mail"
                            }
                        },
                        "Until":  {
                            "actions":  {
                                "For_each":  {
                                    "foreach":  "@variables('incidents')",
                                    "actions":  {
                                        "Append_to_string_variable":  {
                                            "runAfter":  {
                                                "Parse_JSON_3":  [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type":  "AppendToStringVariable",
                                            "inputs":  {
                                                "name":  "Report",
                                                "value":  "@{body('Parse_JSON_3')?['Evaluation Result Content']} "
                                            }
                                        },
                                        "Increment_variable":  {
                                            "runAfter":  {
                                                "Append_to_string_variable":  [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type":  "IncrementVariable",
                                            "inputs":  {
                                                "name":  "limit",
                                                "value":  1
                                            }
                                        },
                                        "Parse_JSON_3":  {
                                            "runAfter":  {
                                                "generate_the_report":  [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type":  "ParseJson",
                                            "inputs":  {
                                                "content":  "@body('generate_the_report')",
                                                "schema":  {
                                                    "properties":  {
                                                        "Evaluation Result Content":  {
                                                            "type":  "string"
                                                        },
                                                        "Evaluation Result Type":  {
                                                            "type":  "string"
                                                        },
                                                        "Prompt Content":  {
                                                            "type":  "string"
                                                        },
                                                        "SessionId":  {
                                                            "type":  "string"
                                                        },
                                                        "Skill Name":  {
                                                        },
                                                        "Skill Sources":  {
                                                            "type":  "array"
                                                        }
                                                    },
                                                    "type":  "object"
                                                }
                                            }
                                        },
                                        "generate_the_report":  {
                                            "runAfter":  {
                                            },
                                            "type":  "ApiConnection",
                                            "inputs":  {
                                                "body":  {
                                                    "PromptContent":  "/GetDefenderIncidentReport @{items('For_each')} The results from this response will be used in an automation workflow that only accepts only html structure and tags, \nProvide the report as html tags only, add the incident id as h2 tag, format the incident details as table, include in this table a direct link to defender portal in the above format: https://security.microsoft.com/incidents/\u003cincidentid\u003e.\nFinally use html CSS that will include our organization look and feel that is on color green, add this colors as all the titles and use the color black as the reset of the content."
                                                },
                                                "host":  {
                                                    "connection":  {
                                                        "name":  "@parameters('$connections')['securitycopilot']['connectionId']"
                                                    }
                                                },
                                                "method":  "post",
                                                "path":  "/process-prompt"
                                            }
                                        }
                                    },
                                    "runAfter":  {
                                    },
                                    "type":  "Foreach"
                                }
                            },
                            "runAfter":  {
                                "Counter_Int":  [
                                    "Succeeded"
                                ]
                            },
                            "expression":  "@equals(variables('limit'), variables('counter'))",
                            "limit":  {
                                "count":  60,
                                "timeout":  "PT1H"
                            },
                            "type":  "Until"
                        },
                        "counter_variable":  {
                            "runAfter":  {
                                "limit_variable":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "counter",
                                        "type":  "integer",
                                        "value":  0
                                    }
                                ]
                            }
                        },
                        "incidents_variable":  {
                            "runAfter":  {
                                "Initialize_variable":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "incidents",
                                        "type":  "array",
                                        "value":  [
                                        ]
                                    }
                                ]
                            }
                        },
                        "limit_variable":  {
                            "runAfter":  {
                                "incidents_variable":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "limit",
                                        "type":  "integer",
                                        "value":  0
                                    }
                                ]
                            }
                        }
                    },
                    "outputs":  {
                    }
                },
                "parameters":  {
                    "$connections":  {
                        "value":  {
                            "office365":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('Office365ConnectionName'))]",
                                "connectionName":  "[variables('Office365ConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Office365')]"
                            },
                            "securitycopilot":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('SecuritycopilotConnectionName'))]",
                                "connectionName":  "[variables('SecuritycopilotConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Securitycopilot')]"
                            }
                        }
                    }
                }
            },
            "name":  "[parameters('PlaybookName')]",
            "type":  "Microsoft.Logic/workflows",
            "location":  "[resourceGroup().location]",
            "tags":  {
                "Created By":  "Yaniv Shasha",
                "CreatedDate":  "1/29/2024 10:04:47 PM",
                "CreatorUPN":  "yanivsh@woodgrove.ms"
            },
            "apiVersion":  "2017-07-01",
            "dependsOn":  [
                "[resourceId('Microsoft.Web/connections', variables('Office365ConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('SecuritycopilotConnectionName'))]"
            ]
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('Office365ConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('Office365ConnectionName')]",
                "customParameterValues":  {
                },
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Office365')]"
                }
            }
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('SecuritycopilotConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('SecuritycopilotConnectionName')]",
                "customParameterValues":  {
                },
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Securitycopilot')]"
                }
            }
        }
    ]
}
