{
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion":  "1.0.0.0",
    "metadata":  {
        "title":  "",
        "description":  "",
        "prerequisites":  "",
        "postDeployment":  [
        ],
        "prerequisitesDeployTemplateFile":  "",
        "lastUpdateTime":  "",
        "entities":  [
        ],
        "tags":  [
        ],
        "support":  {
            "tier":  "community",
            "armtemplate":  "Generated from https://github.com/Azure/Azure-Sentinel/tree/master/Tools/Playbook-ARM-Template-Generator"
        },
        "author":  {
            "name":  ""
        }
    },
    "parameters":  {
        "PlaybookName":  {
            "defaultValue":  "Get-CfS-Risky-Incidents-Report",
            "type":  "string"
        },
        "incidentCount":  {
            "type":  "Int",
			"defaultValue": 10,
            "metadata":  {
                "description":  "Maximum number of incidents to return."
            }
        },
        "lookBackDays":  {
            "type":  "Int",
			"defaultValue": -7,
            "metadata":  {
                "description":  "How many days to look back."
            }
        },
        "minRiskScore":  {
            "type":  "Int",
			"defaultValue": 0,
            "metadata":  {
                "description":  "Minimum STAT Risk Score."
            }
        }
    },
    "variables":  {
        "AzuremonitorlogsConnectionName":  "[concat('Azuremonitorlogs-', parameters('PlaybookName'))]",
        "MicrosoftSentinelConnectionName":  "[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
        "SecuritycopilotConnectionName":  "[concat('Securitycopilot-', parameters('PlaybookName'))]",
        "TeamsConnectionName":  "[concat('Teams-', parameters('PlaybookName'))]"
    },
    "resources":  [
        {
            "properties":  {
                "provisioningState":  "Succeeded",
                "state":  "Disabled",
                "definition":  {
                    "$schema":  "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion":  "1.0.0.0",
                    "parameters":  {
                        "$connections":  {
                            "defaultValue":  {
                            },
                            "type":  "Object"
                        },
                        "incidentCount":  {
                            "defaultValue":  "[parameters('incidentCount')]",
                            "type":  "Int"
                        },
                        "lookBackDays":  {
                            "defaultValue":  "[parameters('lookBackDays')]",
                            "type":  "Int"
                        },
                        "minRiskScore":  {
                            "defaultValue":  "[parameters('minRiskScore')]",
                            "type":  "Int"
                        }
                    },
                    "triggers":  {
                        "Recurrence":  {
                            "recurrence":  {
                                "frequency":  "Week",
                                "interval":  1,
                                "schedule":  {
                                    "hours":  [
                                        "7"
                                    ],
                                    "weekDays":  [
                                        "Friday"
                                    ]
                                },
                                "timeZone":  "Pacific Standard Time"
                            },
                            "evaluatedRecurrence":  {
                                "frequency":  "Week",
                                "interval":  1,
                                "schedule":  {
                                    "hours":  [
                                        "7"
                                    ],
                                    "weekDays":  [
                                        "Friday"
                                    ]
                                },
                                "timeZone":  "Pacific Standard Time"
                            },
                            "type":  "Recurrence"
                        }
                    },
                    "actions":  {
                        "For_Each_Risky_Incident_-_Generate_CfS_Incident_Report":  {
                            "foreach":  "@body('Parse_Risky_Incidents')",
                            "actions":  {
                                "Add_Risky_Incident_Report_to_Incident":  {
                                    "runAfter":  {
                                        "Post_Risky_Incident_Report_in_Teams_Channel":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "ApiConnection",
                                    "inputs":  {
                                        "body":  {
                                            "incidentArmId":  "@items('For_Each_Risky_Incident_-_Generate_CfS_Incident_Report')?['IncidentArmId']",
                                            "message":  "\u003cp\u003e@{body('Parse_Copilot_for_Security_Response')?['Evaluation Result Content']}\u003c/p\u003e"
                                        },
                                        "host":  {
                                            "connection":  {
                                                "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method":  "post",
                                        "path":  "/Incidents/Comment"
                                    }
                                },
                                "Cfs_Risky_Incident_Report":  {
                                    "runAfter":  {
                                    },
                                    "type":  "ApiConnection",
                                    "inputs":  {
                                        "body":  {
                                            "PromptContent":  "/GenerateIncidentReport Incident: @{items('For_Each_Risky_Incident_-_Generate_CfS_Incident_Report')['ProviderIncidentId']}"
                                        },
                                        "host":  {
                                            "connection":  {
                                                "name":  "@parameters('$connections')['securitycopilot']['connectionId']"
                                            }
                                        },
                                        "method":  "post",
                                        "path":  "/process-prompt"
                                    }
                                },
                                "Compose_Adaptive_Card":  {
                                    "runAfter":  {
                                        "Parse_Copilot_for_Security_Response":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "Compose",
                                    "inputs":  {
                                        "$schema":  "http://adaptivecards.io/schemas/adaptive-card.json",
                                        "actions":  [
                                            {
                                                "title":  "Open Defender",
                                                "type":  "Action.OpenUrl",
                                                "url":  "https://security.microsoft.com/incident2/@{items('For_Each_Risky_Incident_-_Generate_CfS_Incident_Report')['ProviderIncidentId']}/overview"
                                            },
                                            {
                                                "title":  "Open Copilot for Security",
                                                "type":  "Action.OpenUrl",
                                                "url":  "https://securitycopilot.microsoft.com/sessions/@{body('Parse_Copilot_for_Security_Response')?['SessionId']}"
                                            }
                                        ],
                                        "body":  [
                                            {
                                                "color":  "attention",
                                                "size":  "large",
                                                "spacing":  "Large",
                                                "style":  "heading",
                                                "text":  "**Copilot For Security Risky Incident Report**",
                                                "type":  "TextBlock",
                                                "wrap":  true
                                            },
                                            {
                                                "color":  "attention",
                                                "size":  "large",
                                                "spacing":  "Large",
                                                "style":  "heading",
                                                "text":  "**Defender Incident ID:**  @{items('For_Each_Risky_Incident_-_Generate_CfS_Incident_Report')['ProviderIncidentId']}",
                                                "type":  "TextBlock",
                                                "wrap":  true
                                            },
                                            {
                                                "color":  "attention",
                                                "size":  "large",
                                                "spacing":  "Large",
                                                "style":  "heading",
                                                "text":  "**Incident Title:** @{items('For_Each_Risky_Incident_-_Generate_CfS_Incident_Report')?['Title']}",
                                                "type":  "TextBlock",
                                                "wrap":  true
                                            },
                                            {
                                                "size":  "Medium",
                                                "spacing":  "Medium",
                                                "text":  "**Incident Created:** @{items('For_Each_Risky_Incident_-_Generate_CfS_Incident_Report')['TimeGenerated']}",
                                                "type":  "TextBlock",
                                                "wrap":  true
                                            },
                                            {
                                                "size":  "Medium",
                                                "spacing":  "Medium",
                                                "text":  "**Incident Severity:** @{items('For_Each_Risky_Incident_-_Generate_CfS_Incident_Report')?['Severity']}",
                                                "type":  "TextBlock",
                                                "wrap":  true
                                            },
                                            {
                                                "size":  "Medium",
                                                "spacing":  "Medium",
                                                "text":  "**Incident Risk Score:** @{items('For_Each_Risky_Incident_-_Generate_CfS_Incident_Report')['RiskScore']}",
                                                "type":  "TextBlock",
                                                "wrap":  true
                                            },
                                            {
                                                "size":  "Medium",
                                                "spacing":  "Medium",
                                                "text":  "**Incident Assigned To:** @{items('For_Each_Risky_Incident_-_Generate_CfS_Incident_Report')?['Owner']} ",
                                                "type":  "TextBlock",
                                                "wrap":  true
                                            },
                                            {
                                                "size":  "Medium",
                                                "spacing":  "Medium",
                                                "text":  "**Incident Status:** @{items('For_Each_Risky_Incident_-_Generate_CfS_Incident_Report')?['Status']} ",
                                                "type":  "TextBlock",
                                                "wrap":  true
                                            },
                                            {
                                                "size":  "Medium",
                                                "spacing":  "Medium",
                                                "text":  "**Incident Classification:** @{items('For_Each_Risky_Incident_-_Generate_CfS_Incident_Report')?['Classification']} ",
                                                "type":  "TextBlock",
                                                "wrap":  true
                                            },
                                            {
                                                "size":  "Medium",
                                                "spacing":  "Medium",
                                                "text":  "**Incident Classification Reason:** @{items('For_Each_Risky_Incident_-_Generate_CfS_Incident_Report')?['ClassificationReason']} ",
                                                "type":  "TextBlock",
                                                "wrap":  true
                                            },
                                            {
                                                "size":  "default",
                                                "spacing":  "Medium",
                                                "text":  "**Copilot For Security Incident Report:**\n\n@{body('Parse_Copilot_for_Security_Response')?['Evaluation Result Content']}",
                                                "type":  "TextBlock",
                                                "wrap":  true
                                            }
                                        ],
                                        "msteams":  {
                                            "width":  "Full"
                                        },
                                        "type":  "AdaptiveCard",
                                        "version":  "1.2"
                                    }
                                },
                                "Parse_Copilot_for_Security_Response":  {
                                    "runAfter":  {
                                        "Cfs_Risky_Incident_Report":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "ParseJson",
                                    "inputs":  {
                                        "content":  "@body('Cfs_Risky_Incident_Report')",
                                        "schema":  {
                                            "properties":  {
                                                "Evaluation Result Content":  {
                                                    "type":  "string"
                                                },
                                                "Evaluation Result Type":  {
                                                    "type":  "string"
                                                },
                                                "Prompt Content":  {
                                                    "type":  "string"
                                                },
                                                "SessionId":  {
                                                    "type":  "string"
                                                },
                                                "Skill Name":  {
                                                    "type":  "string"
                                                },
                                                "Skill Sources":  {
                                                    "items":  {
                                                        "properties":  {
                                                            "displayName":  {
                                                                "type":  "string"
                                                            },
                                                            "sourceContent":  {
                                                                "type":  "string"
                                                            },
                                                            "sourceSerializedData":  {
                                                            },
                                                            "sourceType":  {
                                                                "type":  "string"
                                                            }
                                                        },
                                                        "required":  [
                                                            "displayName",
                                                            "sourceType",
                                                            "sourceContent",
                                                            "sourceSerializedData"
                                                        ],
                                                        "type":  "object"
                                                    },
                                                    "type":  "array"
                                                }
                                            },
                                            "type":  "object"
                                        }
                                    }
                                },
                                "Post_Risky_Incident_Report_in_Teams_Channel":  {
                                    "runAfter":  {
                                        "Compose_Adaptive_Card":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "ApiConnection",
                                    "inputs":  {
                                        "body":  {
                                            "messageBody":  "@{outputs('Compose_Adaptive_Card')}",
                                            "recipient":  {
                                            }
                                        },
                                        "host":  {
                                            "connection":  {
                                                "name":  "@parameters('$connections')['teams']['connectionId']"
                                            }
                                        },
                                        "method":  "post",
                                        "path":  "/v1.0/teams/conversation/adaptivecard/poster/Flow bot/location/@{encodeURIComponent('Channel')}"
                                    }
                                },
                                "Tag_Risky_Incident_with_Copilot_Summary":  {
                                    "runAfter":  {
                                        "Add_Risky_Incident_Report_to_Incident":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "ApiConnection",
                                    "inputs":  {
                                        "body":  {
                                            "incidentArmId":  "@items('For_Each_Risky_Incident_-_Generate_CfS_Incident_Report')?['IncidentArmId']",
                                            "tagsToAdd":  {
                                                "TagsToAdd":  [
                                                    {
                                                        "Tag":  "Copilot Summary"
                                                    }
                                                ]
                                            }
                                        },
                                        "host":  {
                                            "connection":  {
                                                "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method":  "put",
                                        "path":  "/Incidents"
                                    }
                                }
                            },
                            "runAfter":  {
                                "Parse_Risky_Incidents":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Foreach"
                        },
                        "Get_Riskiest_Incidents":  {
                            "runAfter":  {
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "body":  "let fromDateTime=datetime('@{addDays(utcNow(),parameters('lookBackDays'))}');\nlet toDateTime=datetime('@{utcNow()}');\nlet minRisk='@{parameters('minRiskScore')}';\nSecurityIncident\n| extend Tactics = todynamic(AdditionalData.tactics)\n| extend Owner = todynamic(Owner.email) \n| extend IncidentUrl = tostring(IncidentUrl) // Ensure that the field is treated as a string\n| extend SubstringStart = indexof(IncidentUrl, \"/subscriptions\") // Find the index where \"/subscriptions\" appears in the URL\n| extend IncidentArmId = substring(IncidentUrl, SubstringStart) // Extract the substring starting from the index\n| parse Labels with * '\"Risk Score - ' RiskScore '\"' * \n| summarize arg_max(LastModifiedTime, *) by IncidentNumber\n| where datetime_utc_to_local(TimeGenerated, \"US/Pacific\") between ( fromDateTime .. toDateTime )\n| where toint(RiskScore) \u003e toint(minRisk)\n| where Labels !contains \"Copilot Summary\"\n| project TimeGenerated, IncidentArmId, ProviderIncidentId, Title, Description, Severity, toint(RiskScore), Status, Classification, ClassificationReason, ClassificationComment, Owner, Labels\n| order by RiskScore desc \n| limit @{parameters('incidentCount')}",
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                    }
                                },
                                "method":  "post",
                                "path":  "/queryData",
                                "queries":  {
                                    "resourcegroups":  "",
                                    "resourcename":  "",
                                    "resourcetype":  "",
                                    "subscriptions":  "",
                                    "timerange":  "Set in query"
                                }
                            }
                        },
                        "Parse_Risky_Incidents":  {
                            "runAfter":  {
                                "Get_Riskiest_Incidents":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ParseJson",
                            "inputs":  {
                                "content":  "@body('Get_Riskiest_Incidents')?['value']",
                                "schema":  {
                                    "items":  {
                                        "properties":  {
                                            "Classification":  {
                                            },
                                            "ClassificationComment":  {
                                            },
                                            "ClassificationReason":  {
                                            },
                                            "Description":  {
                                                "type":  "string"
                                            },
                                            "IncidentArmId":  {
                                                "type":  "string"
                                            },
                                            "Labels":  {
                                            },
                                            "Owner":  {
                                            },
                                            "ProviderIncidentId":  {
                                                "type":  "string"
                                            },
                                            "RiskScore":  {
                                                "type":  "integer"
                                            },
                                            "Severity":  {
                                                "type":  "string"
                                            },
                                            "Status":  {
                                                "type":  "string"
                                            },
                                            "TimeGenerated":  {
                                                "type":  "string"
                                            },
                                            "Title":  {
                                                "type":  "string"
                                            }
                                        },
                                        "required":  [
                                            "TimeGenerated",
                                            "ProviderIncidentId"
                                        ],
                                        "type":  "object"
                                    },
                                    "type":  "array"
                                }
                            }
                        }
                    },
                    "outputs":  {
                    }
                },
                "parameters":  {
                    "$connections":  {
                        "value":  {
                            "azuremonitorlogs":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('AzuremonitorlogsConnectionName'))]",
                                "connectionName":  "[variables('AzuremonitorlogsConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuremonitorlogs')]"
                            },
                            "azuresentinel":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                "connectionName":  "[variables('MicrosoftSentinelConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]",
                                "connectionProperties":  {
                                    "authentication":  {
                                        "type":  "ManagedServiceIdentity"
                                    }
                                }
                            },
                            "securitycopilot":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('SecuritycopilotConnectionName'))]",
                                "connectionName":  "[variables('SecuritycopilotConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Securitycopilot')]"
                            },
                            "teams":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]",
                                "connectionName":  "[variables('TeamsConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Teams')]"
                            }
                        }
                    }
                }
            },
            "name":  "[parameters('PlaybookName')]",
            "type":  "Microsoft.Logic/workflows",
            "location":  "[resourceGroup().location]",
            "tags":  {
                "hidden-SentinelTemplateName":  "Get-CfS-Risky-Incidents-Report",
                "hidden-SentinelTemplateVersion":  "1.0"
            },
            "identity":  {
                "type":  "SystemAssigned"
            },
            "apiVersion":  "2017-07-01",
            "dependsOn":  [
                "[resourceId('Microsoft.Web/connections', variables('AzuremonitorlogsConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('SecuritycopilotConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]"
            ]
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('AzuremonitorlogsConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('AzuremonitorlogsConnectionName')]",
                "customParameterValues":  {
                },
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuremonitorlogs')]"
                }
            }
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('MicrosoftSentinelConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('MicrosoftSentinelConnectionName')]",
                "customParameterValues":  {
                },
                "parameterValueType":  "Alternative",
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]"
                }
            }
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('SecuritycopilotConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('SecuritycopilotConnectionName')]",
                "customParameterValues":  {
                },
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Securitycopilot')]"
                }
            }
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('TeamsConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('TeamsConnectionName')]",
                "customParameterValues":  {
                },
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Teams')]"
                }
            }
        }
    ]
}
