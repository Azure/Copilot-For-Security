{
  "definition": {
    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
    "contentVersion": "1.0.0.0",
    "triggers": {
      "Microsoft_Sentinel_incident": {
        "type": "ApiConnectionWebhook",
        "inputs": {
          "host": {
            "connection": {
              "name": "@parameters('$connections')['azuresentinel']['connectionId']"
            }
          },
          "body": {
            "callback_url": "@{listCallbackUrl()}"
          },
          "path": "/incident-creation"
        }
      }
    },
    "actions": {
      "Get_manager_(V2)": {
        "type": "ApiConnection",
        "inputs": {
          "host": {
            "connection": {
              "name": "@parameters('$connections')['office365users']['connectionId']"
            }
          },
          "method": "get",
          "path": "/codeless/v1.0/users/@{encodeURIComponent(variables('user'))}/manager"
        },
        "runAfter": {
          "Initialize_user_variable": [
            "Succeeded"
          ]
        }
      },
      "Initialize_user_variable": {
        "type": "InitializeVariable",
        "inputs": {
          "variables": [
            {
              "name": "user",
              "type": "string",
              "value": "@{replace(body('Parse_JSON_UPN')?['Evaluation Result Content'],'\n','')}"
            }
          ]
        },
        "runAfter": {
          "Parse_JSON_UPN": [
            "Succeeded"
          ]
        }
      },
      "Parse_Sentinel_Incident_JSON": {
        "type": "ParseJson",
        "inputs": {
          "content": "@triggerBody()",
          "schema": {
            "properties": {
              "eventUniqueId": {
                "type": "string"
              },
              "object": {
                "properties": {
                  "etag": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "properties": {
                    "properties": {
                      "additionalData": {
                        "properties": {
                          "alertProductNames": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "alertsCount": {
                            "type": "integer"
                          },
                          "bookmarksCount": {
                            "type": "integer"
                          },
                          "commentsCount": {
                            "type": "integer"
                          },
                          "tactics": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "techniques": {
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "alerts": {
                        "items": {
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "properties": {
                              "properties": {
                                "additionalData": {
                                  "properties": {
                                    "Alert generation status": {
                                      "type": "string"
                                    },
                                    "Analytic Rule Ids": {
                                      "type": "string"
                                    },
                                    "Analytic Rule Name": {
                                      "type": "string"
                                    },
                                    "Correlation Id": {
                                      "type": "string"
                                    },
                                    "Data Sources": {
                                      "type": "string"
                                    },
                                    "Event Grouping": {
                                      "type": "string"
                                    },
                                    "ProcessedBySentinel": {
                                      "type": "string"
                                    },
                                    "Query": {
                                      "type": "string"
                                    },
                                    "Query End Time UTC": {
                                      "type": "string"
                                    },
                                    "Query Period": {
                                      "type": "string"
                                    },
                                    "Query Start Time UTC": {
                                      "type": "string"
                                    },
                                    "Search Query Results Overall Count": {
                                      "type": "string"
                                    },
                                    "Trigger Operator": {
                                      "type": "string"
                                    },
                                    "Trigger Threshold": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "alertDisplayName": {
                                  "type": "string"
                                },
                                "alertType": {
                                  "type": "string"
                                },
                                "confidenceLevel": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                },
                                "endTimeUtc": {
                                  "type": "string"
                                },
                                "friendlyName": {
                                  "type": "string"
                                },
                                "processingEndTime": {
                                  "type": "string"
                                },
                                "productComponentName": {
                                  "type": "string"
                                },
                                "productName": {
                                  "type": "string"
                                },
                                "providerAlertId": {
                                  "type": "string"
                                },
                                "resourceIdentifiers": {
                                  "items": {
                                    "properties": {
                                      "type": {
                                        "type": "string"
                                      },
                                      "workspaceId": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "workspaceId"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "severity": {
                                  "type": "string"
                                },
                                "startTimeUtc": {
                                  "type": "string"
                                },
                                "status": {
                                  "type": "string"
                                },
                                "systemAlertId": {
                                  "type": "string"
                                },
                                "tactics": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "timeGenerated": {
                                  "type": "string"
                                },
                                "vendorName": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "type",
                            "kind",
                            "properties"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "bookmarks": {
                        "type": "array"
                      },
                      "comments": {
                        "type": "array"
                      },
                      "createdTimeUtc": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "firstActivityTimeUtc": {
                        "type": "string"
                      },
                      "incidentNumber": {
                        "type": "integer"
                      },
                      "incidentUrl": {
                        "type": "string"
                      },
                      "labels": {
                        "type": "array"
                      },
                      "lastActivityTimeUtc": {
                        "type": "string"
                      },
                      "lastModifiedTimeUtc": {
                        "type": "string"
                      },
                      "owner": {
                        "properties": {
                          "assignedTo": {},
                          "email": {},
                          "objectId": {},
                          "userPrincipalName": {}
                        },
                        "type": "object"
                      },
                      "providerIncidentId": {
                        "type": "string"
                      },
                      "providerName": {
                        "type": "string"
                      },
                      "relatedAnalyticRuleIds": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "relatedEntities": {
                        "items": {
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "properties": {
                              "properties": {
                                "address": {
                                  "type": "string"
                                },
                                "friendlyName": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "type",
                            "kind",
                            "properties"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "severity": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "objectEventType": {
                "type": "string"
              },
              "objectSchemaType": {
                "type": "string"
              },
              "workspaceId": {
                "type": "string"
              },
              "workspaceInfo": {
                "properties": {
                  "ResourceGroupName": {
                    "type": "string"
                  },
                  "SubscriptionId": {
                    "type": "string"
                  },
                  "WorkspaceName": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "runAfter": {}
      },
      "Parse_JSON_UPN": {
        "type": "ParseJson",
        "inputs": {
          "content": "@body('Security_Copilot_-_Get_User_UPN')",
          "schema": {
            "properties": {
              "Evaluation Result Content": {
                "type": "string"
              },
              "Evaluation Result Type": {
                "type": "string"
              },
              "Next Prompt Suggestions": {},
              "Prompt Content": {
                "type": "string"
              },
              "SessionId": {
                "type": "string"
              },
              "Skill Name": {}
            },
            "type": "object"
          }
        },
        "runAfter": {
          "Security_Copilot_-_Get_User_UPN": [
            "Succeeded"
          ]
        }
      },
      "Security_Copilot_-_Describe_Entities": {
        "type": "ApiConnection",
        "inputs": {
          "host": {
            "connection": {
              "name": "@parameters('$connections')['securitycopilot-1']['connectionId']"
            }
          },
          "method": "post",
          "body": {
            "PromptContent": "Tell me about the entities associated with that incident.",
            "SessionId": "@body('Security_Copilot_-_Summarize_Sentinel_Incident')?['sessionId']"
          },
          "path": "/process-prompt"
        },
        "runAfter": {
          "Security_Copilot_-_Summarize_Sentinel_Incident": [
            "Succeeded"
          ]
        }
      },
      "Security_Copilot_-_Get_User_UPN": {
        "type": "ApiConnection",
        "inputs": {
          "host": {
            "connection": {
              "name": "@parameters('$connections')['securitycopilot-1']['connectionId']"
            }
          },
          "method": "post",
          "body": {
            "PromptContent": "what is the user's upn? The results from this response will be used in an automation workflow that only accepts a single string. Provide the user UPN in a response with no text before or after, do not include newline characters",
            "SessionId": "@body('Security_Copilot_-_Describe_Entities')?['sessionId']"
          },
          "path": "/process-prompt"
        },
        "runAfter": {
          "Security_Copilot_-_Describe_Entities": [
            "Succeeded"
          ]
        }
      },
      "Security_Copilot_-_Summarize_Sentinel_Incident": {
        "type": "ApiConnection",
        "inputs": {
          "host": {
            "connection": {
              "name": "@parameters('$connections')['securitycopilot-1']['connectionId']"
            }
          },
          "method": "post",
          "body": {
            "PromptContent": "Summarize Sentinel incident @{body('Parse_Sentinel_Incident_JSON')?['object']?['properties']?['incidentNumber']}"
          },
          "path": "/process-prompt"
        },
        "runAfter": {
          "Parse_Sentinel_Incident_JSON": [
            "Succeeded"
          ]
        }
      },
      "Send_approval_email": {
        "type": "ApiConnectionWebhook",
        "inputs": {
          "host": {
            "connection": {
              "name": "@parameters('$connections')['office365-1']['connectionId']"
            }
          },
          "body": {
            "NotificationUrl": "@{listCallbackUrl()}",
            "Message": {
              "To": "@variables('manager')",
              "Body": "we received a security incident involving one of your direct report and needs important answer to help us progress with our investigation\nplease let us know if @{variables('user')} is currently traveling?\n\nManager: @{variables('manager')}",
              "Importance": "Normal",
              "HideHTMLMessage": false,
              "ShowHTMLConfirmationDialog": false,
              "Subject": "Is @{variables('user')} is traveling? ",
              "Options": "True, False"
            }
          },
          "path": "/approvalmail/$subscriptions"
        },
        "runAfter": {
          "Initialize_manager_variable": [
            "Succeeded"
          ]
        }
      },
      "Condition": {
        "type": "If",
        "expression": {
          "and": [
            {
              "equals": [
                "@body('Send_approval_email')?['SelectedOption']",
                "True"
              ]
            }
          ]
        },
        "actions": {
          "Security_Copilot_-_User_is_Traveling": {
            "type": "ApiConnection",
            "inputs": {
              "host": {
                "connection": {
                  "name": "@parameters('$connections')['securitycopilot-1']['connectionId']"
                }
              },
              "method": "post",
              "body": {
                "PromptContent": "Upon contacting the user manager via email and receiving approval confirming the user's travel status, kindly reduce the severity of the incident. Additionally, generate a concise summary report incorporating the manager's response.",
                "SessionId": "@body('Security_Copilot_-_Get_User_UPN')?['sessionId']"
              },
              "path": "/process-prompt"
            }
          }
        },
        "else": {
          "actions": {
            "Security_Copilot_-_Provide_Risk_Report": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['securitycopilot-1']['connectionId']"
                  }
                },
                "method": "post",
                "body": {
                  "PromptContent": "Summarize the above risk investigation and provide a Risk Report with what product provided which detection, end with if this user identity shows sign of risk. Set a new line at the bottom and state \"Take Action on User\" if risk is detected or \"No further action needed\" if no risk is present.",
                  "SessionId": "@body('Security_Copilot_-_User_Risk_Summary')?['sessionId']"
                },
                "path": "/process-prompt"
              },
              "runAfter": {
                "Security_Copilot_-_User_Risk_Summary": [
                  "Succeeded"
                ]
              }
            },
            "Security_Copilot_-_User_Related_Alerts": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['securitycopilot-1']['connectionId']"
                  }
                },
                "method": "post",
                "body": {
                  "PromptContent": "Search the \"SecurityAlert\" table in Sentinel using the upn @{variables('user')} as input. and the full account name as another input  and provide information on any additional alerts involving this user within the last week. answer with the above fields : DisplayName , Entities , StartTime, ProviderName, Tactics , Techniques",
                  "SessionId": "@body('Security_Copilot_-_User_Risk_Detections')?['sessionId']"
                },
                "path": "/process-prompt"
              },
              "runAfter": {
                "Security_Copilot_-_User_Risk_Detections": [
                  "Succeeded"
                ]
              }
            },
            "Security_Copilot_-_User_Log_In_Events": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['securitycopilot-1']['connectionId']"
                  }
                },
                "method": "post",
                "body": {
                  "PromptContent": "Hunt in defender and tell me the last log-in events for @{variables('user')} in the last 3 days, please return all the relevant events and include in the answer the above fields :Timestamp,LogonType,Application,ApplicationId,OSPlatform,City,IPAddress",
                  "SessionId": "@body('Security_Copilot_-_User_Related_Alerts')?['sessionId']"
                },
                "path": "/process-prompt"
              },
              "runAfter": {
                "Security_Copilot_-_User_Related_Alerts": [
                  "Succeeded"
                ]
              }
            },
            "Security_Copilot_-_Comprehensive_Incident_Report": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['securitycopilot-1']['connectionId']"
                  }
                },
                "method": "post",
                "body": {
                  "PromptContent": "Compose a comprehensive incident report summarizing the investigation. This should encompass the initial incident (referenced in prompt number 1), details about entities involved, 2KQL queries, the manager's response regarding the user's travel, and any risk calculations conducted during the process.",
                  "SessionId": "@body('Security_Copilot_-_Provide_Risk_Report')?['sessionId']"
                },
                "path": "/process-prompt"
              },
              "runAfter": {
                "Security_Copilot_-_Provide_Risk_Report": [
                  "Succeeded"
                ]
              }
            },
            "Security_Copilot_-_User_Risk_Detections": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['securitycopilot-1']['connectionId']"
                  }
                },
                "method": "post",
                "body": {
                  "PromptContent": "Upon contacting the user manager via email and receiving answer that the user is not traveling, Get the user risk detections for user @{variables('user')}",
                  "SessionId": "@body('Security_Copilot_-_Get_User_UPN')?['sessionId']"
                },
                "path": "/process-prompt"
              }
            },
            "Security_Copilot_-_User_Risk_Summary": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['securitycopilot-1']['connectionId']"
                  }
                },
                "method": "post",
                "body": {
                  "PromptContent": "@variables('user')",
                  "SessionId": "@body('Security_Copilot_-_User_Risk_Detections')?['sessionId']",
                  "SkillName": "GetUserRiskSummary"
                },
                "path": "/process-prompt"
              },
              "runAfter": {
                "Security_Copilot_-_User_Log_In_Events": [
                  "Succeeded"
                ]
              }
            }
          }
        },
        "runAfter": {
          "Send_approval_email": [
            "Succeeded"
          ]
        }
      },
      "Initialize_manager_variable": {
        "type": "InitializeVariable",
        "inputs": {
          "variables": [
            {
              "name": "manager",
              "type": "string",
              "value": "@body('Get_manager_(V2)')?['userPrincipalName']"
            }
          ]
        },
        "runAfter": {
          "Get_manager_(V2)": [
            "Succeeded"
          ]
        }
      }
    },
    "outputs": {},
    "parameters": {
      "$connections": {
        "type": "Object",
        "defaultValue": {}
      }
    }
  },
  "parameters": {
    "$connections": {
      "value": {
        "azuresentinel": {
          "id": "/subscriptions/a6f2843a-7ebf-4039-a1e2-12655aae1278/providers/Microsoft.Web/locations/eastus/managedApis/azuresentinel",
          "connectionId": "/subscriptions/a6f2843a-7ebf-4039-a1e2-12655aae1278/resourceGroups/Sentinel-Playbooks/providers/Microsoft.Web/connections/azuresentinel-16",
          "connectionName": "azuresentinel-16"
        },
        "office365users": {
          "id": "/subscriptions/a6f2843a-7ebf-4039-a1e2-12655aae1278/providers/Microsoft.Web/locations/eastus/managedApis/office365users",
          "connectionId": "/subscriptions/a6f2843a-7ebf-4039-a1e2-12655aae1278/resourceGroups/Sentinel-Playbooks/providers/Microsoft.Web/connections/office365users",
          "connectionName": "office365users"
        },
        "securitycopilot-1": {
          "id": "/subscriptions/a6f2843a-7ebf-4039-a1e2-12655aae1278/providers/Microsoft.Web/locations/eastus/managedApis/securitycopilot",
          "connectionId": "/subscriptions/a6f2843a-7ebf-4039-a1e2-12655aae1278/resourceGroups/Sentinel-Playbooks/providers/Microsoft.Web/connections/securitycopilot-1",
          "connectionName": "securitycopilot-1"
        },
        "office365-1": {
          "id": "/subscriptions/a6f2843a-7ebf-4039-a1e2-12655aae1278/providers/Microsoft.Web/locations/eastus/managedApis/office365",
          "connectionId": "/subscriptions/a6f2843a-7ebf-4039-a1e2-12655aae1278/resourceGroups/Sentinel-Playbooks/providers/Microsoft.Web/connections/office365",
          "connectionName": "office365"
        }
      }
    }
  }
}